ADVANCED JAVA
TECHNOLOGIES


Practical No.1
1a. Aim: Create a simple calculator application using servlet. Date: / /
CODE:
index.html
<html><head>
<title>Calculator App</title></head>
<body>
<form action="CalServlet" >
Enter First Number <input type="text" name="txtN1" ><br>
<select name="op>
<option value="+"> + </option>
<option value="-"> - </option>
<option value="*"> * </option>
<option value="/"> / </option> </select><br>
Enter Second Number <input type="text" name="txtN2" ><br>
<input type="reset">
<input type="submit" value="Calculate" >
</form></body>
</html>
------------------------------------------------------------------------------------------------- CalServlet.java
import java.io.IOException;
import java.io.PrintWriter;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
public class CalculatorServlet extends HttpServlet {
public void doGet(HttpServletRequest request, HttpServletResponse response)
throws ServletException, IOException
{
response.setContentType("text/html;charset=UTF-8");
PrintWriter pw = response.getWriter();
int n1 = Integer.parseInt(request.getParameter("txtN1"));
int n2 = Integer.parseInt(request.getParameter("txtN2"));
int result =0;
String opr=request.getParameter("op");
if(opr.equals("+")) result=n1+n2;
if(opr.equals("-")) result=n1-n2;
if(opr.equals("*")) result=n1*n2;
if(opr.equals("/")) result=n1/n2;
pw.println("<h1> Result = "+result);
pw.println("</body></html>");
}
}
---------------------------------------------------------------------------------------------------------------- Output:

Date: / /
1b. Aim: Create a servlet for a login page. If the username and password are correct then it
says message “Hello <username>” else a message “login failed”. CODE:
index.html
<html><head><title>Login Form</title></head>
<form action="LoginServlet" >
Enter User ID<input type="text" name="txtId"><br>
Enter Password<input type="password" name="txtPass"><br>
<input type="reset"><input type="submit" value=" Click to Login " >
</form>
</html>
------------------------------------------------------------------------------------------ LoginServlet.java
import java.io.*;
import javax.servlet.ServletException;
import javax.servlet.http.*;
public class LoginServlet extends HttpServlet {
public void doGet(HttpServletRequest request, HttpServletResponse response)
throws ServletException, IOException {
response.setContentType("text/html;charset=UTF-8");
PrintWriter out = response.getWriter();
out.println("<html><head><title>Servlet LoginServlet</title></head>");
String uname = request.getParameter("txtId");
String upass = request.getParameter("txtPass");
if(uname.equals("admin") && upass.equals("12345")){
out.println("<body bgcolor=blue >");
out.println("<h1> Hello!!! "+uname+"</h1>");
} else {
out.println("<body bgcolor=red >");
out.println("<h1> Login Fail !!! </h1>");
}
out.println("</body></html>");
}
}
---------------------------------------------------------------------------------------------------------------- Output:
Date: / /
1c. Aim: Create a registration servlet in Java using JDBC. Accept the details such as
Username, Password, Email, and Country from the user using HTML Form and store the
registration details in the database. CODE :
for Database
>> create database logindb;
>> use logindb;
>> create table user (username varchar(10) PRIMARY KEY, password varchar(20), email
varchar(20), country(10)); ----------------------------------------------------------------------------------------------------------------
index.html
<html><head><title>Registration Page</title></head>
<body><form action="registerServlet" > <H1>Welcome to Registration page</H1>
Enter User Name <input type="text" name="txtUid"><br>
Enter Password <input type="password" name="txtPass"><br>
Enter Email <input type="text" name="txtEmail" ><br>
Enter Country <input type="text" name="txtCon" ><br>
<input type="reset" ><input type="submit" value="REGISTER" ></form></body></html>
------------------------------------------------------------------------------------------------------ registerServlet.java
import java.io.*;
import javax.servlet.ServletException;
import javax.servlet.http.*;
import java.sql.*;
public class registerServlet extends HttpServlet {
protected void doGet(HttpServletRequest request, HttpServletResponse response)
throws ServletException, IOException {
response.setContentType("text/html;charset=UTF-8");
PrintWriter out = response.getWriter();
String id = request.getParameter("txtUid");
String ps = request.getParameter("txtPass");
String em = request.getParameter("txtEmail");
String co = request.getParameter("txtCon");
try{
Class.forName("com.mysql.jdbc.Driver");
Connection con =DriverManager.getConnection("jdbc:mysql://localhost:3306/logindb","root","root");
PreparedStatement pst = con.prepareStatement("insert into user values(?,?,?,?)");
pst.setString(1,id);
pst.setString(2,ps);
pst.setString(3,em);
pst.setString(4,co);
int row = pst.executeUpdate();
out.println("<h1>"+row+ " Inserted Succesfullyyyyy");
} catch (Exception e) {out.println(e); }
}
--------------------------------------------------------------------------------------------------------- Output :
Practical No.2
Date : / /
2a. Aim : Using Request Dispatcher Interface create a Servlet which will validate the
password entered by the user, if the user has entered "servlet" as password, then he will be
forwarded to Welcome Servlet else the user will stay on the index.html page and an error
message will be displayed. CODE :
index.html
<html><head><title>Login Form</title></head>
<form action="LoginServlet" >
Enter User ID<input type="text" name="txtId"><br>
Enter Password<input type="password" name="txtPass"><br>
<input type="reset"><input type="submit" value=" Click to Login " >
</form></html>
------------------------------------------------------------------------------------------------------------- LoginServlet.java
import java.io.IOException;
import java.io.PrintWriter;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.RequestDispatcher;
public class LoginServlet extends HttpServlet {
protected void doGet(HttpServletRequest request, HttpServletResponse response)
throws ServletException, IOException {
response.setContentType("text/html;charset=UTF-8");
PrintWriter out = response.getWriter();
out.println("<html><head>");
out.println("<title>Servlet LoginServlet</title></head>");
String uname = request.getParameter("txtId");
String upass = request.getParameter("txtPass");
if(uname.equals("admin") && upass.equals("servlet")) {
RequestDispatcher rd = request.getRequestDispatcher("WelcomeServlet");
rd.forward(request, response);
} else {
out.println("<h1> Login Fail !!! </h1>");
RequestDispatcher rd = request.getRequestDispatcher("index.html");
rd.include(request, response);
}
out.println("</body>");
out.println("</html>");
}
}
---------------------------------------------------------------------------------------------------------- WelcomeServlet.java
import java.io.IOException;
import java.io.PrintWriter;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.RequestDispatcher;
public class WelcomeServlet extends HttpServlet {
protected void doGet(HttpServletRequest request, HttpServletResponse response)
throws ServletException, IOException {
response.setContentType("text/html;charset=UTF-8");
PrintWriter out = response.getWriter();
out.println("<html><head>");
out.println("<h1>Login Successful!!</h1>");
}
}
Output :
Date : / /
2b. Aim : Create a servlet that uses Cookies to store the number of times a user has visited
servlet. CODE :
index.html
<html>
<head><title>Cookie Demo</title></head>
<body><form action="count" >
Enter Your Name <input type="text" name="t1"><br>
<input type="submit" value="Click to Enter ">
</form></body></html>
--------------------------------------------------------------------------------------------------------- count.java
import java.io.IOException;
import java.io.PrintWriter;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.Cookie;
public class count extends HttpServlet {
static int count=0,c2=0;
protected void doGet(HttpServletRequest request, HttpServletResponse response)
throws ServletException, IOException {
response.setContentType("text/html;charset=UTF-8");
PrintWriter out = response.getWriter();
String name=request.getParameter("t1");
Cookie c1=new Cookie("count",String.valueOf(count));
c2=Integer.parseInt(c1.getValue());
if (c2==0) {
out.println("Welcome = "+name);
count++;
} else {
c1=new Cookie("count",String.valueOf(count));
count++;
out.println("Welcome = "+ name + "You have visited the page " +count + " times.");
}
}
}
---------------------------------------------------------------------------------------------------------------- Output :
Date : / /
2c. Aim : Create a servlet demonstrating the use of session creation and destruction. Also
check whether the user has visited this page first time or has visited earlier also using sessions. CODE :
index.html
<html><head><title>Session Demo</title></head>
<form action="Page1" method="get" >
Enter User ID <input type="text" name="txtName"><br>
<input type="reset" ><input type="submit" >
</form></html>
---------------------------------------------------------------------------------------------------------- Page1.java
import java.io.IOException;
import java.io.PrintWriter;
import javax.servlet.ServletException;
import javax.servlet.http.*;
public class Page1 extends HttpServlet {
public void doGet(HttpServletRequest request, HttpServletResponse response)
throws ServletException, IOException {
response.setContentType("text/html;charset=UTF-8");
PrintWriter out = response.getWriter();
out.println("<html><head><title>Servlet Page1</title></head>");
HttpSession hs = request.getSession(true);
if (hs.isNew()) {
out.println("<body bgcolor=yellow>");
String name = request.getParameter("txtName");
hs.setAttribute("uname", name);
hs.setAttribute("visit", "1");
out.println("<h1>Welcome First Time</h1>");
} else {
out.println("<h1>Welcome Again</h1>");
int visit = Integer.parseInt((String)hs.getAttribute("visit"))+1;
out.println("<h1>You Visited "+visit+"Times</h1>");
hs.setAttribute("visit", ""+visit);
}
out.println("<h1>Your Session ID is "+hs.getId()+"</h1>");
out.println("<h1>You Logged in at "+new java.util.Date(hs.getCreationTime())+"</h1>");
out.println("<h1><a href=Page2>Click for Page 2 </a></h1>");
out.println("<h1><a href=LogoutServlet>Click to Terminate Session </a></h1>");
out.println("</body></html>");
}
}
---------------------------------------------------------------------------------------------------------------- Page2.java
import java.io.IOException;
import java.io.PrintWriter;
import javax.servlet.ServletException;
import javax.servlet.http.*;
public class Page2 extends HttpServlet {
public void doGet(HttpServletRequest request, HttpServletResponse response)
throws ServletException, IOException {
response.setContentType("text/html;charset=UTF-8");
PrintWriter out = response.getWriter();
out.println("<html><head><title>Servlet Page2</title></head>");
HttpSession hs = request.getSession(false);
out.println("<h1>Welcome Again on Page No. 2</h1>");
int visit = Integer.parseInt((String)hs.getAttribute("visit"))+1;
out.println("<h1>You Visited "+visit+"Times</h1>");
hs.setAttribute("visit", ""+visit);
out.println("<h1>Your Session ID is "+hs.getId()+"</h1>");
out.println("<h1>You Logged in at "+new java.util.Date(hs.getCreationTime())+"</h1>");
out.println("<h1><a href=Page1>Click for Page 1 </a></h1>");
out.println("<h1><a href=LogoutServlet>Click for Terminate Session </a></h1>");
out.println("</body></html>");
}
}
---------------------------------------------------------------------------------------------------------------- LogoutServlet.java
import java.io.IOException;
import java.io.PrintWriter;
import javax.servlet.ServletException;
import javax.servlet.http.*;
public class LogoutServlet extends HttpServlet {
public void doGet(HttpServletRequest request, HttpServletResponse response)
throws ServletException, IOException {
response.setContentType("text/html;charset=UTF-8");
PrintWriter out = response.getWriter();
out.println("<html><head><title>Servlet LogoutServlet</title></head>");
out.println("<body>");
HttpSession hs = request.getSession();
if(hs != null) hs.invalidate();
out.println("<h1>You are Logged out now........</h1>");
out.println("</body></html>");
}
}
---------------------------------------------------------------------------------------------------------------- Output :

Practical No.3
Date : / /
3a. Aim : Create a Servlet application to upload and download a file. CODE :
UPLOAD FILE
index.html
<html><body>
]<form action="FileUploadServlet" method="post" enctype="multipart/form-data">
Select File to Upload:<input type="file" name="file" id="file">
Destination <input type="text" value="" name="destination"><br>
<input type="submit" value="Upload file" name="upload" id="upload">
</form></body></html>
---------------------------------------------------------------------------------------------------------------- FileUploadServlet.java
import java.io.*;
import javax.servlet.*;
import javax.servlet.annotation.MultipartConfig;
import javax.servlet.http.*;
@MultipartConfig
public class FileUploadServlet extends HttpServlet {
public void doPost(HttpServletRequest request,HttpServletResponse response) throws
ServletException, IOException {
response.setContentType("text/html");
PrintWriter out = response.getWriter();
String path=request.getParameter("destination");
Part filePart=request.getPart("file");
String filename=filePart.getSubmittedFileName().toString();
out.print("<br><br><hr> file name: "+filename);
OutputStream os=null;
InputStream is=null;
try {
os=new FileOutputStream(new File(path+File.separator+filename));
is=filePart.getInputStream();
int read=0;
while ((read = is.read()) != -1) {
os.write(read);
}
out.println("<br>file uploaded sucessfully...!!!");
}
catch(FileNotFoundException e){out.print(e);}
}
}
---------------------------------------------------------------------------------------------------------------- Output :
DOWNLOAD FILE :
index.html
<html><head><title>File Download Page</title>
</head> <body> <h1>File Download Application</h1>
Click <a href="DownloadServlet?filename=EJ Lab Manual.pdf">EJ Manual</a>
<br/><br/>Click <a href="DownloadServlet?filename=AI.pdf">AI</a>
</body> </html>
---------------------------------------------------------------------------------------------------------------- **(Once you create the project for downloading a file, copy any 2 files (pdf, docx) that
already exists on your pc and paste both the files in the WEB PAGES folder of your
project. Right Click on WEB PAGES -> paste and then write your own file name in the
above html code in place of - “EJ Lab Manual.pdf” and “AI.pdf”)
Example : If 1 of your file names is ‘EJ.pdf’ then, on the 3
rd
line write “filename=EJ.pdf”
---------------------------------------------------------------------------------------------------------------- DownloadServlet.java
import java.io.InputStream;
import javax.servlet.ServletContext;
import javax.servlet.ServletOutputStream;
public class DownloadServlet extends HttpServlet {
@Override
protected void doGet(HttpServletRequest request, HttpServletResponse response)
throws ServletException, IOException {
response.setContentType("APPLICATION/OCTET-STREAM");
String filename = request.getParameter("filename");
ServletContext context = getServletContext();
InputStream is = context.getResourceAsStream("/" + filename);
PrintWriter out = response.getWriter();
response.setHeader("Content-Disposition", "attachment; filename=\"" + filename + "\"");
int i;
while ((i = is.read()) != -1) {
out.write(i);
}
is.close();
out.close();
}
}
---------------------------------------------------------------------------------------------------------------- Output :
Date : / /
3b. Aim : Develop Simple Servlet Question Answer Application using Database. CODE :
for Database
>> create database qadb;
>> use qadb;
>> create table quiz (qno varchar(5) PRIMARY KEY, question varchar(100), op1
varchar(50), op2 varchar(50), op3 varchar(50), op4 varchar(50), ans varchar(50));
>> insert into quiz values ('001', 'Unit of Energy is ___', 'Dozen','Kilometre', 'Joule',
'Hertz','Joule');
>> insert into quiz values ('002', 'Following is the extension for saving a python file',
'.jpg','.py', '.docx', '.cs','.py');
>> insert into quiz values ('003', '___ is the largest continent', 'Asia','Antarctica', 'Europe',
'Australia','Asia');
>> insert into quiz values ('004', '___ is the smallest memory unit', 'bit','byte', 'Kilo Byte',
'Gigabyte','bit');
>> insert into quiz values ('005', 'Which is the only liquid metal', 'Steel','Aluminium',
'Magnesium', 'Mercury','Mercury'); ----------------------------------------------------------------------------------------------------------------
index.html
<html><head><title>Quiz Application</title></head>
<body><h1>Welcome to Quiz Servlet </h1>
<h1><a href="QuizServlet" >CLICK TO START QUIZ</a></h1> </body></html>
---------------------------------------------------------------------------------------------------------------- QuizServlet.java
import java.io.*;
import java.sql.*;
import javax.servlet.*;
import javax.servlet.http.*;
public class QuizServlet extends HttpServlet {
public void doGet(HttpServletRequest request, HttpServletResponse response)
throws ServletException, IOException {
response.setContentType("text/html;charset=UTF-8");
PrintWriter out = response.getWriter();
out.println("<form action=ShowResult >");
try {
Class.forName("com.mysql.jdbc.Driver");
Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/qadb","root","root");
Statement stmt = con.createStatement();
ResultSet res = stmt.executeQuery("select * from quiz");
out.println("<table border=1 >");
int qno=0;
while(res.next()) {
qno++;
out.println("<tr><td>"+res.getString(1)+"</td>");
out.println("<td>"+res.getString(2)+"</td></tr>");
out.println("<tr><td><input type=radio name="+qno+" value="+res.getString(3)+"></td><td>"+res.getString(3)+"</td></tr>");
out.println("<tr><td><input type=radio name="+qno+" value="+res.getString(4)+"></td><td>"+res.getString(4)+"</td></tr>");
out.println("<tr><td><input type=radio name="+qno+" value="+res.getString(5)+"></td><td>"+res.getString(5)+"</td></tr>");
out.println("<tr><td><input type=radio name="+qno+" value="+res.getString(6)+"></td><td>"+res.getString(6)+"</td></tr>");
}
} catch (Exception e) {out.println(e);}
out.println("</table>");
out.println("<input type=reset >");
out.println("<input type=submit value=SUBMIT >");
out.println("</form>");
}
}
ShowResult.java
import java.io.*;
import java.sql.*;
import javax.servlet.*;
import javax.servlet.http.*;
public class ShowResult extends HttpServlet {
public void doGet(HttpServletRequest request, HttpServletResponse response)
throws ServletException, IOException {
response.setContentType("text/html;charset=UTF-8");
PrintWriter out = response.getWriter();
try {
Class.forName("com.mysql.jdbc.Driver");
Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/qadb","root","root");
Statement stmt = con.createStatement();
ResultSet res = stmt.executeQuery("select ans from quiz");
int count =0, qno=0;
while (res.next()) {
if (res.getString(1).equals(request.getParameter(""+(++qno)))) {
count++;
out.println("<h1>Correct </h1>");
}
else {
out.println("<h1>Incorrect </h1>");
}
}
out.println("<h1>Your Score is "+count+" </h1>");
}catch (Exception e) {out.println(e);}
}
}
Output :
Practical No.4
Date : / /
4a. Aim : Develop a simple JSP application to display values obtained from the use of
intrinsic objects of various types. CODE :
index.jsp
<%@page contentType="text/html" pageEncoding="UTF-8"%>
<html><head><title>JSP Page</title></head><body>
<h1>Use of Intrinsic Objects in JSP</h1><h1>Request Object </h1>
Query String <%=request.getQueryString() %><br>
Context Path <%=request.getContextPath() %><br>
Remote Host <%=request.getRemoteHost() %><br>
<h1>Response Object </h1>
Character Encoding Type <%=response.getCharacterEncoding() %><br>
Content Type <%=response.getContentType() %><br>
Locale <%=response.getLocale() %><br>
<h1>Session Object </h1> ID <%=session.getId() %><br>
Creation Time <%=new java.util.Date(session.getCreationTime()) %><br>
Last Access Time<%=new java.util.Date(session.getLastAccessedTime()) %><br>
</body></html>
---------------------------------------------------------------------------------------------------------------- Output :
Date : / /
4b. Aim : Develop a simple JSP application to pass values from one page to another with
validations. (Name-txt, age-txt, hobbies-checkbox, email-txt, gender-radio button). CODE :
index.html
<!DOCTYPE html>
<html><head><title>Form Page</title><script type="text/javascript">
function validateForm() {
var name = document.forms["myForm"]["name"].value;
var age = document.forms["myForm"]["age"].value;
var email = document.forms["myForm"]["email"].value;
var hobbies = document.forms["myForm"]["hobbies"];
var gender = document.forms["myForm"]["gender"];
if (name == "") {
alert("Name must be filled out");
return false; }
if (age == "" || isNaN(age) || age < 1 || age > 100) {
alert("Please enter a valid age");
return false; }
if (!validateHobbies(hobbies)) {
alert("Please select at least one hobby");
return false; }
if (!validateGender(gender)) {
alert("Please select your gender");
return false; }
if (email == "" || !email.match(/^\S+@\S+\.\S+$/)) {
alert("Please enter a valid email");
return false;
} return true; }
function validateHobbies(hobbies) {
for (var i = 0; i < hobbies.length; i++) {
if (hobbies[i].checked) {
return true;
}
} return false; }
function validateGender(gender) {
for (var i = 0; i < gender.length; i++) {
if (gender[i].checked) {
return true; }
} return false;
} </script>
</head><body> <h2>Enter Your Details</h2>
<form name="myForm" action="Validate.jsp" onsubmit="return validateForm()" method="post">
Name: <input type="text" name="name"><br><br>
Age: <input type="text" name="age"><br><br>
Email: <input type="text" name="email"><br><br>
Gender: <br>
<input type="radio" name="gender" value="Male"> Male<br>
<input type="radio" name="gender" value="Female"> Female<br><br>
Hobbies: <br>
<input type="checkbox" name="hobbies" value="Reading"> Reading<br>
<input type="checkbox" name="hobbies" value="Music"> Music<br>
<input type="checkbox" name="hobbies" value="Sports"> Sports<br><br>
<input type="submit" value="Submit">
</form> </body></html>
---------------------------------------------------------------------------------------------------------------- Validate.jsp
<%@ page contentType="text/html;charset=UTF-8" language="java" %>
<!DOCTYPE html>
<html><head> <title>Result Page</title></head><body>
<h1>Validated Successfully!!</h1> <h2>Your Submitted Information</h2>
<% String name = request.getParameter("name");
String age = request.getParameter("age");
String email = request.getParameter("email");
String gender = request.getParameter("gender");
String[] hobbies = request.getParameterValues("hobbies"); %>
<p><strong>Name:</strong> <%= name %></p>
<p><strong>Age:</strong> <%= age %></p>
<p><strong>Email:</strong> <%= email %></p>
<p><strong>Gender:</strong> <%= gender %></p>
<p><strong>Hobbies:</strong></p>
<ul> <%
if (hobbies != null) {
for (String hobby : hobbies) {
out.println("<li>" + hobby + "</li>");
}
} else {
out.println("<li>No hobbies selected</li>");
} %>
</ul>
</body> </html>
---------------------------------------------------------------------------------------------------------------- Output :

Date : / /
4c. Aim : Create a registration and login JSP application to register and authenticate the user
based on username and password using JDBC. CODE :
for database
>> create table users(username varchar(20) PRIMARY KEY, password1
varchar(20),password2 varchar(20), email varchar(20), country varchar(20));
>> insert into users values ('Diksha','admin','admin','admin@admin.com','India'); ----------------------------------------------------------------------------------------------------------------
login.html
<html><body><h1>Login Page</h1> <form action="Login.jsp" >
Enter User Name <input type="text" name="txtName" ><br>
Enter Password <input type="password" name="txtPass" ><br>
<input type="reset" ><input type="submit" value="LOGIN" >
</form></body></html>
---------------------------------------------------------------------------------------------------------------- Login.jsp
<%@page contentType="text/html" import="java.sql.*"%>
<html><body><h1>Registration JSP Page</h1>
<% String uname=request.getParameter("txtName");
String pass = request.getParameter("txtPass");
try{
Class.forName("com.mysql.jdbc.Driver");
Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/logindb","root","root");
PreparedStatement stmt = con.prepareStatement("select password1 from users where
username=?");
stmt.setString(1, uname);
ResultSet rs = stmt.executeQuery();
if(rs.next()) {
if(pass.equals(rs.getString(1))) {
out.println("<h1> LOGIN SUCCESSFULLL </h1>");
} } else {
out.println("<h1>User Name not exist !!!!!</h1>"); %>
<jsp:include page="register.html" ></jsp:include>
<% } } catch(Exception e){out.println(e);}
%> </body></html>
---------------------------------------------------------------------------------------------------------------- register.html
<html><head><title>New User Registration Page</title></head>
<body><form action="Register.jsp" > <h1> New User Registration Page</h1>
Enter User Name <input type="text" name="txtName" ><br>
Enter Password <input type="password" name="txtPass1" ><br>
Re-Enter Password<input type="password" name="txtPass2" ><br>
Enter Email<input type="text" name="txtEmail" ><br>
Enter Country Name <input type="text" name="txtCon" ><br>
<input type="reset" ><input type="submit" value="REGISTER" >
</form></body></html>
---------------------------------------------------------------------------------------------------------------- Register.jsp
<%@page contentType="text/html" import="java.sql.*"%>
<html><body><h1>Registration JSP Page</h1>
<% String uname=request.getParameter("txtName");
String pass1 = request.getParameter("txtPass1");
String pass2 = request.getParameter("txtPass2");
String email = request.getParameter("txtEmail");
String ctry = request.getParameter("txtCon");
if(pass1.equals(pass2)){
try{
Class.forName("com.mysql.jdbc.Driver");
Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/logindb","root","root");
PreparedStatement stmt = con.prepareStatement("insert into users values (?,?,?,?,?)");
stmt.setString(1, uname); stmt.setString(2, pass1); stmt.setString(3, pass1);
stmt.setString(4, email); stmt.setString(5, ctry);
int row = stmt.executeUpdate();
if(row==1) { out.println("Registration Successful"); }
else {
out.println("Registration FAIL !!!!");
%><jsp:include page="register.html" ></jsp:include>
<% } } catch(Exception e){out.println(e);}
} else {
out.println("<h1>Password Mismatch</h1>"); %>
<jsp:include page="register.html" ></jsp:include>
<% } %> </body> </html>
---------------------------------------------------------------------------------------------------------------- Output :

Practical No.5
Date : / /
5a. Aim : Create an html page with fields, eno, name, age, desg, salary. Now on submit this
data to a JSP page which will update the employee table of database with matching eno. CODE :
for database
>> use logindb;
>> create table emp (empid varchar(10) PRIMARY KEY, ename varchar(50), salary
varchar(50), age varchar(50) );
>> insert into emp values ('1', 'aaa', '221234', '11');
>> insert into emp values ('2', 'bbb', '334567', '22');
>> insert into emp values ('3', 'ccc', '44454', '33');
>> insert into emp values ('4', 'ddd', '55123', '44'); ----------------------------------------------------------------------------------------------------------------
index.html
<html><body><form action="UpdateEmp.jsp" >
Enter Employee Number<input type="text" name="txtEno" ><br>
Enter Name<input type="text" name="txtName" ><br>
Enter age<input type="text" name="txtAge" ><br>
Enter Salary<input type="text" name="txtSal" ><br>
<input type="reset" ><input type="submit">
</form></body></html>
---------------------------------------------------------------------------------------------------------------- UpdateEmp.jsp
<%@page contentType="text/html" import="java.sql.*" %>
<html><body> <h1>Employee Record Update</h1> <%
String eno=request.getParameter("txtEno");
String name=request.getParameter("txtName");
String age = request.getParameter("txtAge");
String sal = request.getParameter("txtSal");
try{
Class.forName("com.mysql.jdbc.Driver");
Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/logindb","root","root");
PreparedStatement stmt = con.prepareStatement("select * from emp where empid=?");
stmt.setString(1, eno);
ResultSet rs = stmt.executeQuery();
if(rs.next()){
out.println("<h1>~~~ Employee "+name+" Exist ~~~ </h1>");
PreparedStatement pst1= con.prepareStatement("update emp set salary=? where empid=?");
PreparedStatement pst2= con.prepareStatement("update emp set age=? where empid=?");
pst1.setString(1, sal); pst1.setString(2, eno);
pst2.setString(1, age); pst2.setString(2, eno);
pst1.executeUpdate(); pst2.executeUpdate();
} else {
out.println("<h1>Employee Record not exist !!!!!</h1>");
}
}catch(Exception e){out.println(e);}
%></body></html>
---------------------------------------------------------------------------------------------------------------- Output :

Date : / /
5b. Aim : Create a JSP page to demonstrate the use of Expression language. CODE :
index.jsp
<%@page import="java.util.List"%>
<%@page import="java.util.Arrays"%>
<%@ page contentType="text/html;charset=UTF-8" language="java" %>
<html><head><title>Expression Language</title></head>
<body><h1>Expression Language</h1>
<h2>1. Using Implicit Object: sessionScope</h2>
<%-- Setting session attribute --%>
<%
session.setAttribute("username", "JohnDoe");
%>
Welcome, ${sessionScope.username}!
<h2>2. Using Arithmetic Operators</h2>
<%-- EL Arithmetic: Adding two numbers --%>
${5 + 10}
<h2>3. Using Relational Operators</h2>
<%-- EL Relational: Comparing two numbers --%>
Is 5 greater than 3? ${5 > 3}
<h2>4. Using Logical Operators</h2>
<%-- EL Logical: Combining two conditions --%>
Is 5 greater than 3 and 10 greater than 5? ${5 > 3 && 10 > 5}
<h2>5. Accessing Collection Data</h2>
<%-- EL with a List stored in application scope --%>
<%
List<String> fruits = Arrays.asList("Apple", "Banana", "Orange");
application.setAttribute("fruitList", fruits);
%>
First fruit: ${applicationScope.fruitList[0]}<br/>
Second fruit: ${applicationScope.fruitList[1]}<br/>
Third fruit: ${applicationScope.fruitList[2]}
</body></html>
---------------------------------------------------------------------------------------------------------------- Output :
Date : / /
5c. Aim : Create a JSP application to demonstrate the use of JSTL. CODE :
index.html
<!DOCTYPE html>
<html> <head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>JSP Page</title> </head> <body>
<h1>JSTL TAGS</h1>
<a href="jstl.jsp">Click here</a>
</body> </html>
----------------------------------------------------------------------------------------------------------------
jstl.jsp
<%@ page contentType="text/html; charset=UTF-8" language="java" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<!DOCTYPE html>
<html lang="en"> <head> <meta charset="UTF-8">
<title>JSTL Example</title> </head>
<body> <h1>JSTL Example</h1>
<c:set var="message" value="Hello, JSTL World!" />
<p>${message}</p>
<c:set var="fruits" value="${['Apple', 'Banana', 'Cherry']}" />
<h3>Fruit List:</h3>
<ul>
<c:forEach var="fruit" items="${fruits}">
<li>${fruit}</li>
</c:forEach>
</ul>
<c:if test="${not empty fruits}">
<p>We have some fruits listed!</p>
</c:if>
<h3>Checking the first fruit:</h3>
<c:choose>
<c:when test="${fruits[0] == 'Apple'}">
<p>The first fruit is an Apple.</p>
</c:when>
<c:otherwise>
<p>The first fruit is not an Apple.</p>
</c:otherwise>
</c:choose>
<a href="index.html">Back</a> <!-- Link back to index -->
</body> </html>
---------------------------------------------------------------------------------------------------------------- Output :
Practical No.6
Date : / /
6a. Aim : Create a Currency Converter application using EJB. CODE :
index.html
<html><head><title>Currency Converter</title></head><body>
<form action="CCServlet" >
Enter Amount <input type="text" name="amt"><br>
Select Conversion Type
<input type="radio" name="type" value="r2d" checked>Rupees to Dollar
<input type="radio" name="type" value="d2r" >Dollar to Rupees<br>
<input type="reset" ><input type="submit" value="CONVERT" >
</form></body>
---------------------------------------------------------------------------------------------------------------- CCServlet.java
package mypack;
import java.io.*;
import javax.servlet.*;
import javax.servlet.http.*;
import javax.ejb.EJB;
import mybeans.CCBean;
public class CCServlet extends HttpServlet {
@EJB CCBean obj;
public void doGet(HttpServletRequest request, HttpServletResponse response)
throws ServletException, IOException {
response.setContentType("text/html;charset=UTF-8");
PrintWriter out = response.getWriter();
double amt = Double.parseDouble(request.getParameter("amt"));
if(request.getParameter("type").equals("r2d")) {
out.println("<h1>"+amt+ " Rupees = "+obj.r2Dollar(amt)+" Dollars</h1>");
}
if(request.getParameter("type").equals("d2r")) {
out.println("<h1>"+amt+ " Dollars = "+obj.d2Rupees(amt)+" Rupees</h1>");
}
}
}
---------------------------------------------------------------------------------------------------------------- CCBean.java
package mybeans;
import javax.ejb.Stateless;
@Stateless
public class CCBean {
public CCBean(){}
public double r2Dollar(double r){ return r/82.53; }
public double d2Rupees(double d){ return d*82.53; }
}
---------------------------------------------------------------------------------------------------------------- Output :
Date : / /
6b. Aim : Develop a Simple Room Reservation System Application Using EJB. CODE :
for database
>> create database rrdb;
>> use rrdb;
>> Create table roombook (RoomId varchar(4) PRIMARY KEY, RoomType varchar(20), charges double(5,2), cust varchar(20), mob varchar(20), status varchar(10));
>> insert into roombook values('1001','Delux',500.00,'','','Not Booked');
>> insert into roombook values('1002','Super Delux',700.00,'','','Not Booked');
>> insert into roombook values('1003','Suit',950.00,'','','Not Booked');
>> insert into roombook values('2001','Delux',500.00,'','','Not Booked');
>> insert into roombook values('2002','Super Delux',700.00,'','','Not Booked');
>> insert into roombook values('2003','Suit',950.00,'','','Not Booked'); ----------------------------------------------------------------------------------------------------------------
index.html
<html><head><title>Room Reservation System</title></head>
<body><form action="RBServlet" >
Select a room Type
<input type="radio" name="txtType" value="Delux">Delux
<input type="radio" name="txtType" value="Super Delux">Super Delux
<input type="radio" name="txtType" value="Suit">Suit<br>
Enter Your Name<input type="text" name="txtCust" ><br>
Enter Mobile No.<input type="text" name="txtMob" ><br>
<input type="reset" ><input type="submit" value="Book Room">
</form></body></html>
---------------------------------------------------------------------------------------------------------------- RBServlet.java
package mypack;
import java.io.*;
import javax.servlet.*;
import javax.servlet.http.*;
import javax.ejb.EJB;
import mybeans.RRBean;
public class RBServlet extends HttpServlet {
@EJB RRBean obj;
public void doGet(HttpServletRequest request, HttpServletResponse response)
throws ServletException, IOException{
PrintWriter out=response.getWriter();
String rt=request.getParameter("txtType");
String cn=request.getParameter("txtCust");
String cm=request.getParameter("txtMob");
String msg = obj.roomBook(rt, cn, cm);
out.println(msg);
}
}
---------------------------------------------------------------------------------------------------------------- RRBean.java
package mybeans;
import javax.ejb.Stateless;
import java.sql.*;
@Stateless
public class RRBean {
public RRBean(){}
public String roomBook(String rt, String cn, String cm){
String msg="";
try{
Class.forName("com.mysql.jdbc.Driver");
Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/rrdb","root","root");
String query="select * from roombook where RoomType=? and status='Not
Booked'";
PreparedStatement pst = con.prepareStatement(query);
pst.setString(1,rt);
ResultSet rs= pst.executeQuery();
if(rs.next()){
String rno=rs.getString(1);
PreparedStatement stm1 = con.prepareStatement("update roombook set
cust=? where RoomId=? ");
PreparedStatement stm2 = con.prepareStatement("update roombook set
mob=? where RoomId=? ");
PreparedStatement stm3 = con.prepareStatement("update roombook set
status=? where RoomId=? ");
stm1.setString(1,cn); stm1.setString(2,rno);
stm2.setString(1,cm); stm2.setString(2,rno);
stm3.setString(1, "Booked"); stm3.setString(2,rno);
stm1.executeUpdate();
stm2.executeUpdate();
stm3.executeUpdate();
msg = "Room "+rno+ " Booked <br> Charges = "+rs.getString(3);
} else {
msg = "Room "+rt+ " currently Not available";
}
}catch(Exception e){msg=""+e;}
return msg;
}
}
Output :
Date : / /
6c. Aim : Develop simple shopping cart application using EJB [Stateful Session Bean]. CODE :
index.html
<!DOCTYPE html>
<html lang="en">
<head> <meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Shopping Cart</title> </head>
<body> <h1>Shopping Cart</h1>
<form action="cart" method="post">
<input type="text" name="item" placeholder="Enter item" required>
<button type="submit" name="action" value="add">Add Item</button>
<button type="submit" name="action" value="remove">Remove Item</button>
<button type="submit" name="action" value="clear">Clear Cart</button> </form>
<form action="cart" method="get">
<button type="submit">View Cart</button> </form>
</body> </html>
---------------------------------------------------------------------------------------------------------------- ShoppingCartServlet.java
package SCart;
import java.io.IOException;
import javax.ejb.EJB;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
@WebServlet("/cart")
public class ShoppingCartServlet extends HttpServlet {
@EJB
private ShoppingCartBean cart;
@Override
protected void doPost(HttpServletRequest request, HttpServletResponse response)
throws ServletException, IOException {
String action = request.getParameter("action");
String item = request.getParameter("item");
if ("add".equals(action)) {
cart.addItem(item);
} else if ("remove".equals(action)) {
cart.removeItem(item);
} else if ("clear".equals(action)) {
cart.clearCart();
}
response.getWriter().println("Cart Contents: " + cart.getItems());
}
@Override
protected void doGet(HttpServletRequest request, HttpServletResponse response)
throws ServletException, IOException {
response.getWriter().println("Cart Contents: " + cart.getItems());
}
}
---------------------------------------------------------------------------------------------------------------- ShoppingCartBean.java
package SCart;
import java.util.ArrayList;
import java.util.List;
import javax.ejb.Stateful;
@Stateful
public class ShoppingCartBean {
private List<String> items;
public ShoppingCartBean() {
items = new ArrayList<>();
}
public void addItem(String item) {
items.add(item);
}
public void removeItem(String item) {
items.remove(item);
}
public List<String> getItems() {
return items;
}
public int getItemCount() {
return items.size();
}
public void clearCart() {
items.clear();
}
}
---------------------------------------------------------------------------------------------------------------- Output :
Adding Apple
Viewing
Adding Mango
Adding Strawberry
Viewing the Cart
Removing an Item
Clearing the Cart
Practical No.7
Date : / /
7a. Aim : Develop simple EJB application to demonstrate Servlet Hit count using Singleton
Session Beans. CODE :
index.html
<html> <head> <meta http-equiv="Refresh" content="0; URL=ServletClient">
</head> <body> </body> </html>
---------------------------------------------------------------------------------------------------------------- ServletClient.java
package servlet;
import java.io.IOException;
import java.io.PrintWriter;
import javax.ejb.EJB;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
@WebServlet(name= "ServletClient", urlPatterns={"/ServletClient"})
public class ServletClient extends HttpServlet {
@EJB CounterServletHitsBean CounterBean;
@Override
protected void service(HttpServletRequest request, HttpServletResponse response)
throws ServletException, IOException {
response.setContentType("text/html;charset=UTF-8");
try (PrintWriter out = response.getWriter()) {
out.println("<!DOCTYPE html>");
out.println("<html>");
out.println("<head>");
out.println("<title>Servlet ServletClient</title>");
out.println("</head>");
out.println("<body>");
out.println("<h1>Number of times this servlet is accessed:" +
CounterBean.incrementAndGetHitCount()+"</h1>");
out.println("</body>");
out.println("</html>");
} } }
---------------------------------------------------------------------------------------------------------------- CounterServletHitsBean.java
package servlet;
import javax.ejb.Singleton;
@Singleton
public class CounterServletHitsBean {
private int hitcount;
public int incrementAndGetHitCount() {
return hitcount++;
} }
---------------------------------------------------------------------------------------------------------------- Output :
Date : / /
7b. Aim : Develop simple visitor Statistics application using Message Driven Bean [Stateless
Session Bean]. CODE :
index.jsp
<%@page import="javax.jms.JMSException"%>
<%@page import="javax.naming.InitialContext"%>
<%@page import="javax.jms.Connection"%>
<%@page import="javax.jms.TextMessage"%>
<%@page import="javax.jms.MessageProducer"%>
<%@page import="javax.jms.Session"%>
<%@page import="javax.jms.Queue"%>
<%@page import="javax.jms.ConnectionFactory"%>
<%@page contentType="text/html" pageEncoding="UTF-8"%>
<!DOCTYPE html>
<%! private static ConnectionFactory connectionFactory;
private static Queue queue;
Connection connection=null;
Session mySession=null;
MessageProducer messageProducer=null;
TextMessage message=null; %>
<html><head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>JSP Page</title></head>
<body> Welcome to My Home Page <%
try{
InitialContext ic= new InitialContext();
queue= (Queue)ic.lookup("jms/Queue");
connectionFactory=(ConnectionFactory)ic.lookup("jms/QueueFactory");
connection= connectionFactory.createConnection();
mySession=connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
messageProducer=mySession.createProducer(queue);
message=mySession.createTextMessage();
message.setText(request.getRemoteAddr());
messageProducer.send(message); }
catch(JMSException e) { System.out.println("Exception Occoured "+e.toString()); } %>
</body></html>
---------------------------------------------------------------------------------------------------------------- VisitorStatBean.java
package ejb;
import java.sql.*;
import javax.annotation.PostConstruct;
import javax.annotation.PreDestroy;
import javax.ejb.Stateless;
@Stateless
public class VisitorStatBean {
private Connection conn=null;
private ResultSet rs;
private Statement st=null;
private String query =null;
@PostConstruct
public void connect() {
try {
Class.forName("com.mysql.jdbc.Driver").newInstance();
conn=DriverManager.getConnection("jdbc:mysql://localhost/visitorstat", "root", "tiger");
}
catch (Exception e) { System.err.println(e.getMessage()); }
@PreDestroy
public void disconnect() {
try {
conn.close();
} catch (Exception e) {
System.err.println(e.getMessage());
} }
public void addVisitor(String host) {
try {
st= conn.createStatement();
query="insert into userstat (hostname,visits) values ('"+host+"','1')";
st.executeUpdate(query);
}
catch (SQLException e) {
try {
st=conn.createStatement();
query="update userstat set visits=visits+1 where hostname='"+host+"' ";
st.executeUpdate(query);
}
catch (SQLException ex) {
System.err.println("Cannot Update"+e.getMessage());
} } } }
---------------------------------------------------------------------------------------------------------------- BasicMessageBean.java
package ejb;
import javax.annotation.Resource;
import javax.ejb.ActivationConfigProperty;
import javax.ejb.EJB;
import javax.ejb.MessageDriven;
import javax.ejb.MessageDrivenContext;
import javax.jms.JMSException;
import javax.jms.Message;
import javax.jms.MessageListener;
import javax.jms.TextMessage;
@MessageDriven(activationConfig = {
@ActivationConfigProperty(propertyName = "destinationLookup", propertyValue =
"jms/Queue"), @ActivationConfigProperty(propertyName = "destinationType", propertyValue =
"javax.jms.Queue")
})
public class BasicMessageBean implements MessageListener {
@EJB VisitorStatBean vs;
@Resource
private MessageDrivenContext mdc;
public BasicMessageBean() {
}
@Override
public void onMessage(Message message) {
try {
if(message instanceof TextMessage){
TextMessage msg= (TextMessage) message;
vs.addVisitor(msg.getText());
} }
catch (JMSException e) {
mdc.setRollbackOnly();
} } }
---------------------------------------------------------------------------------------------------------------- Output :
Date : / /
7c. Aim : Develop simple Marks Entry Application to demonstrate accessing Database using
EJB. CODE :
for database
>> create table studentdata (sname varchar(10), sub1 varchar(10), sub2 varchar(10));
>> insert into studentdata values('aaa', '50', '40'); ----------------------------------------------------------------------------------------------------------------
index.html
<html> <head>
<title>TODO supply a title</title> <meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
</head> <body> <form action="MEServlet" >
Enter Student Name<input type="text" name="sname" ><br>
Enter Subject 1<input type="text" name="sub1"><br>
Enter Subject 2<input type="text" name="sub2" ><br>
<input type="reset" value="RE-ENTER"><input type="submit" value="SUBMIT">
</form> </body> </html>
---------------------------------------------------------------------------------------------------------------- MEServlet.java
import java.io.IOException;
import java.io.PrintWriter;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.ejb.EJB;
import mybeans.MEBean;
public class MEServlet extends HttpServlet {
@EJB MEBean obj;
protected void doGet(HttpServletRequest request, HttpServletResponse response)
throws ServletException, IOException {
String s1=request.getParameter("sub1");
String n=request.getParameter("sname");
String s2=request.getParameter("sub2");
String msg = obj.markenter(n, s1, s2);
response.setContentType("text/html;charset=UTF-8");
try (PrintWriter out = response.getWriter()) {
out.println("<!DOCTYPE html>");
out.println("<html>");
out.println("<head>");
out.println("<title>Servlet MEServlet</title>");
out.println("</head>");
out.println("<body>");
out.println("<h2>"+msg+"</h2>");
out.println("<h1>Servlet MEServlet at " + request.getContextPath() +
"</h1>");
out.println("</body>");
out.println("</html>");
}
}
}
---------------------------------------------------------------------------------------------------------------- MEBean.java
package mybeans;
import javax.ejb.Stateless;
import java.sql.*;
@Stateless
public class MEBean {
public MEBean(){}
public String markenter(String n, String s1,String s2) {
String msg;
try{
Class.forName("com.mysql.jdbc.Driver");
Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/marksdb","root","root");
String query="insert into studentdata values(?,?,?)";
PreparedStatement pst = con.prepareStatement(query);
pst.setString(1,n);
pst.setString(2,s1);
pst.setString(3,s2);
pst.executeUpdate();
msg="Marks entered";
} catch(Exception e){msg=""+e;}
return msg;
}
}
---------------------------------------------------------------------------------------------------------------- Output :
Practical No.8
Date : / /
8a. Aim : Develop a simple Inventory Application Using JPA. CODE :
index.html
<html><body><form action="AddInventory" method="post">
<table><tr><td colspan="2" align="center"><b> Add the item in Inventory </b></td></tr>
<tr><td> Item Name : </td>
<td> <input type="text" name="itemname" maxlength="25" size="50" /></td></tr>
<tr><td> Price : </td>
<td> <input type="number" name="itemprice" size="50" /> </td></tr>
<tr><td> Quantity :</td>
<td> <input type="number" name="itemquantity" /> </td></tr>
<tr><td colspan="2"> <input type="submit" name="AddToInventory" value="AddToInventory" /> </td></tr>
</table></form></body></html>
---------------------------------------------------------------------------------------------------------------- AddInventory.java
package test;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.Persistence;
public class AddInventory extends HttpServlet {
protected void processRequest(HttpServletRequest request, HttpServletResponse response)
throws ServletException, IOException {
response.setContentType("text/html;charset=UTF-8");
try (PrintWriter out = response.getWriter()) {
out.println("<!DOCTYPE html>");
out.println("<html>");
out.println("<head>");
out.println("<title>Servlet AddInventory</title>");
out.println("</head>");
out.println("<body>");
EntityManagerFactory entityManagerFactory =
Persistence.createEntityManagerFactory("p8aPU");
EntityManager entityManager = entityManagerFactory.createEntityManager();
EntityTransaction entityTransaction = entityManager.getTransaction();
Inventory il=new Inventory();
il.setItemName(request.getParameter("itemname"));
il.setItemQuantity(request.getParameter("itemquantity"));
il.setItemPrice(Integer.parseInt(request.getParameter("itemprice")));
il.setSku(Integer.parseInt(request.getParameter("SKU")));
entityTransaction.begin();
entityManager.persist(il);
entityTransaction.commit();
out.println("<h1>Record is added successfully !!! </h1>");
out.println("</body>");
out.println("</html>");
} } }
---------------------------------------------------------------------------------------------------------------- Output :
Practical No.9
Date : / /
9a. Aim : Develop a JPA Application to demonstrate use of ORM associations. CODE :
index.html
<html> <head>
<title>TODO supply a title</title> <meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0"> </head>
<body>
User Details <hr><br><br> <form action="userview.jsp" >
Name <input type="text" name="uname" maxlength="20"><br>
User Type <input type="text" name="utype" maxlength="20">
<br><input type="submit" value="submit">
</form> </body> </html>
---------------------------------------------------------------------------------------------------------------- userview.jsp
<%@page import="java.util.List"%>
<%@page import="java.util.Iterator"%>
<%@page import="hibernate.User"%>
<%!
SessionFactory sf;
org.hibernate.Session ss;
List<hibernate.User> User;
%> <%
sf = new Configuration().configure().buildSessionFactory();
ss= sf.openSession();
Transaction tx=null;
User ur=new User();
try {
tx=ss.beginTransaction();
String uname=request.getParameter("uname");
String utype=request.getParameter("utype");
ur.setUname(uname);
ur.setUtype(utype);
ss.save(ur);
tx.commit();
} catch(Exception e){ out.println("Error"+e.getMessage()); }
try {
ss.beginTransaction();
User=ss.createQuery("from User").list();
} catch(Exception e){ } %>
<html> <head>
<title>Guest View</title>
</head> <body>
Guest View Click here to go <a href="index.html"> BACK </a> <br><br>
<%
Iterator it=User.iterator();
while(it.hasNext()) {
User eachrecord=(User)it.next();
out.print(eachrecord.getUid()+" ");
out.print(eachrecord.getUname()+"<br>");
out.print(eachrecord.getUtype()+"<br><hr>");
}
%>
</body> </html>
hibernate.revenge.xml
<hibernate-reverse-engineering>
<schema-selection match-catalog="userdb"/>
<table-filter match-name="user"/>
</hibernate-reverse-engineering>
---------------------------------------------------------------------------------------------------------------- hibernate.cfg.xml
<hibernate-configuration> <session-factory>
<property name="hibernate.dialect">org.hibernate.dialect.MySQLDialect</property>
<property name="hibernate.dialect">org.hibernate.dialect.MySQLDialect</property>
<property
name="hibernate.connection.url">jdbc:mysql://localhost:3306/userdb?zeroDateTimeBehavio
r=conve
rtToNull</property>
<property name="hibernate.connection.username">root</property>
<property name="hibernate.connection.password">tiger</property>
</session-factory> </hibernate-configuration>
---------------------------------------------------------------------------------------------------------------- User.hbm.xml
<hibernate-mapping>
<class optimistic-lock="version" catalog="userdb" table="user" name="hibernate.User">
<id name="uid" type="java.lang.Integer">
<column name="uid"/>
<generator class="identity"/> </id>
<property name="uname" type="string">
<column name="uname" length="20"/>
</property>
<property name="utype" type="string">
<column name="utype" length="100"/>
</property> </class>
</hibernate-mapping>
---------------------------------------------------------------------------------------------------------------- User.java
package hibernate;
public class User implements java.io.Serializable {
private Integer uid;
private String uname;
private String utype;
public User() { }
public User(String uname, String utype) {
this.uname = uname;
this.utype = utype;
}
public Integer getUid() {
return this.uid;
}
public void setUid(Integer uid) {
this.uid = uid;
}
public String getUname() {
return this.uname;
}
public void setUname(String uname) {
this.uname = uname;
}
public String getUtype() {
return this.utype;
}
public void setUtype(String utype) {
this.utype = utype;
} }
Output :

ADVANCED JAVA
TECHNOLOGIES


Practical No.1
1a. Aim: Create a simple calculator application using servlet. Date: / /
CODE:
index.html
<html><head>
<title>Calculator App</title></head>
<body>
<form action="CalServlet" >
Enter First Number <input type="text" name="txtN1" ><br>
<select name="op>
<option value="+"> + </option>
<option value="-"> - </option>
<option value="*"> * </option>
<option value="/"> / </option> </select><br>
Enter Second Number <input type="text" name="txtN2" ><br>
<input type="reset">
<input type="submit" value="Calculate" >
</form></body>
</html>
------------------------------------------------------------------------------------------------- CalServlet.java
import java.io.IOException;
import java.io.PrintWriter;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
public class CalculatorServlet extends HttpServlet {
public void doGet(HttpServletRequest request, HttpServletResponse response)
throws ServletException, IOException
{
response.setContentType("text/html;charset=UTF-8");
PrintWriter pw = response.getWriter();
int n1 = Integer.parseInt(request.getParameter("txtN1"));
int n2 = Integer.parseInt(request.getParameter("txtN2"));
int result =0;
String opr=request.getParameter("op");
if(opr.equals("+")) result=n1+n2;
if(opr.equals("-")) result=n1-n2;
if(opr.equals("*")) result=n1*n2;
if(opr.equals("/")) result=n1/n2;
pw.println("<h1> Result = "+result);
pw.println("</body></html>");
}
}
---------------------------------------------------------------------------------------------------------------- Output:

Date: / /
1b. Aim: Create a servlet for a login page. If the username and password are correct then it
says message “Hello <username>” else a message “login failed”. CODE:
index.html
<html><head><title>Login Form</title></head>
<form action="LoginServlet" >
Enter User ID<input type="text" name="txtId"><br>
Enter Password<input type="password" name="txtPass"><br>
<input type="reset"><input type="submit" value=" Click to Login " >
</form>
</html>
------------------------------------------------------------------------------------------ LoginServlet.java
import java.io.*;
import javax.servlet.ServletException;
import javax.servlet.http.*;
public class LoginServlet extends HttpServlet {
public void doGet(HttpServletRequest request, HttpServletResponse response)
throws ServletException, IOException {
response.setContentType("text/html;charset=UTF-8");
PrintWriter out = response.getWriter();
out.println("<html><head><title>Servlet LoginServlet</title></head>");
String uname = request.getParameter("txtId");
String upass = request.getParameter("txtPass");
if(uname.equals("admin") && upass.equals("12345")){
out.println("<body bgcolor=blue >");
out.println("<h1> Hello!!! "+uname+"</h1>");
} else {
out.println("<body bgcolor=red >");
out.println("<h1> Login Fail !!! </h1>");
}
out.println("</body></html>");
}
}
---------------------------------------------------------------------------------------------------------------- Output:
Date: / /
1c. Aim: Create a registration servlet in Java using JDBC. Accept the details such as
Username, Password, Email, and Country from the user using HTML Form and store the
registration details in the database. CODE :
for Database
>> create database logindb;
>> use logindb;
>> create table user (username varchar(10) PRIMARY KEY, password varchar(20), email
varchar(20), country(10)); ----------------------------------------------------------------------------------------------------------------
index.html
<html><head><title>Registration Page</title></head>
<body><form action="registerServlet" > <H1>Welcome to Registration page</H1>
Enter User Name <input type="text" name="txtUid"><br>
Enter Password <input type="password" name="txtPass"><br>
Enter Email <input type="text" name="txtEmail" ><br>
Enter Country <input type="text" name="txtCon" ><br>
<input type="reset" ><input type="submit" value="REGISTER" ></form></body></html>
------------------------------------------------------------------------------------------------------ registerServlet.java
import java.io.*;
import javax.servlet.ServletException;
import javax.servlet.http.*;
import java.sql.*;
public class registerServlet extends HttpServlet {
protected void doGet(HttpServletRequest request, HttpServletResponse response)
throws ServletException, IOException {
response.setContentType("text/html;charset=UTF-8");
PrintWriter out = response.getWriter();
String id = request.getParameter("txtUid");
String ps = request.getParameter("txtPass");
String em = request.getParameter("txtEmail");
String co = request.getParameter("txtCon");
try{
Class.forName("com.mysql.jdbc.Driver");
Connection con =DriverManager.getConnection("jdbc:mysql://localhost:3306/logindb","root","root");
PreparedStatement pst = con.prepareStatement("insert into user values(?,?,?,?)");
pst.setString(1,id);
pst.setString(2,ps);
pst.setString(3,em);
pst.setString(4,co);
int row = pst.executeUpdate();
out.println("<h1>"+row+ " Inserted Succesfullyyyyy");
} catch (Exception e) {out.println(e); }
}
--------------------------------------------------------------------------------------------------------- Output :
Practical No.2
Date : / /
2a. Aim : Using Request Dispatcher Interface create a Servlet which will validate the
password entered by the user, if the user has entered "servlet" as password, then he will be
forwarded to Welcome Servlet else the user will stay on the index.html page and an error
message will be displayed. CODE :
index.html
<html><head><title>Login Form</title></head>
<form action="LoginServlet" >
Enter User ID<input type="text" name="txtId"><br>
Enter Password<input type="password" name="txtPass"><br>
<input type="reset"><input type="submit" value=" Click to Login " >
</form></html>
------------------------------------------------------------------------------------------------------------- LoginServlet.java
import java.io.IOException;
import java.io.PrintWriter;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.RequestDispatcher;
public class LoginServlet extends HttpServlet {
protected void doGet(HttpServletRequest request, HttpServletResponse response)
throws ServletException, IOException {
response.setContentType("text/html;charset=UTF-8");
PrintWriter out = response.getWriter();
out.println("<html><head>");
out.println("<title>Servlet LoginServlet</title></head>");
String uname = request.getParameter("txtId");
String upass = request.getParameter("txtPass");
if(uname.equals("admin") && upass.equals("servlet")) {
RequestDispatcher rd = request.getRequestDispatcher("WelcomeServlet");
rd.forward(request, response);
} else {
out.println("<h1> Login Fail !!! </h1>");
RequestDispatcher rd = request.getRequestDispatcher("index.html");
rd.include(request, response);
}
out.println("</body>");
out.println("</html>");
}
}
---------------------------------------------------------------------------------------------------------- WelcomeServlet.java
import java.io.IOException;
import java.io.PrintWriter;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.RequestDispatcher;
public class WelcomeServlet extends HttpServlet {
protected void doGet(HttpServletRequest request, HttpServletResponse response)
throws ServletException, IOException {
response.setContentType("text/html;charset=UTF-8");
PrintWriter out = response.getWriter();
out.println("<html><head>");
out.println("<h1>Login Successful!!</h1>");
}
}
Output :
Date : / /
2b. Aim : Create a servlet that uses Cookies to store the number of times a user has visited
servlet. CODE :
index.html
<html>
<head><title>Cookie Demo</title></head>
<body><form action="count" >
Enter Your Name <input type="text" name="t1"><br>
<input type="submit" value="Click to Enter ">
</form></body></html>
--------------------------------------------------------------------------------------------------------- count.java
import java.io.IOException;
import java.io.PrintWriter;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.Cookie;
public class count extends HttpServlet {
static int count=0,c2=0;
protected void doGet(HttpServletRequest request, HttpServletResponse response)
throws ServletException, IOException {
response.setContentType("text/html;charset=UTF-8");
PrintWriter out = response.getWriter();
String name=request.getParameter("t1");
Cookie c1=new Cookie("count",String.valueOf(count));
c2=Integer.parseInt(c1.getValue());
if (c2==0) {
out.println("Welcome = "+name);
count++;
} else {
c1=new Cookie("count",String.valueOf(count));
count++;
out.println("Welcome = "+ name + "You have visited the page " +count + " times.");
}
}
}
---------------------------------------------------------------------------------------------------------------- Output :
Date : / /
2c. Aim : Create a servlet demonstrating the use of session creation and destruction. Also
check whether the user has visited this page first time or has visited earlier also using sessions. CODE :
index.html
<html><head><title>Session Demo</title></head>
<form action="Page1" method="get" >
Enter User ID <input type="text" name="txtName"><br>
<input type="reset" ><input type="submit" >
</form></html>
---------------------------------------------------------------------------------------------------------- Page1.java
import java.io.IOException;
import java.io.PrintWriter;
import javax.servlet.ServletException;
import javax.servlet.http.*;
public class Page1 extends HttpServlet {
public void doGet(HttpServletRequest request, HttpServletResponse response)
throws ServletException, IOException {
response.setContentType("text/html;charset=UTF-8");
PrintWriter out = response.getWriter();
out.println("<html><head><title>Servlet Page1</title></head>");
HttpSession hs = request.getSession(true);
if (hs.isNew()) {
out.println("<body bgcolor=yellow>");
String name = request.getParameter("txtName");
hs.setAttribute("uname", name);
hs.setAttribute("visit", "1");
out.println("<h1>Welcome First Time</h1>");
} else {
out.println("<h1>Welcome Again</h1>");
int visit = Integer.parseInt((String)hs.getAttribute("visit"))+1;
out.println("<h1>You Visited "+visit+"Times</h1>");
hs.setAttribute("visit", ""+visit);
}
out.println("<h1>Your Session ID is "+hs.getId()+"</h1>");
out.println("<h1>You Logged in at "+new java.util.Date(hs.getCreationTime())+"</h1>");
out.println("<h1><a href=Page2>Click for Page 2 </a></h1>");
out.println("<h1><a href=LogoutServlet>Click to Terminate Session </a></h1>");
out.println("</body></html>");
}
}
---------------------------------------------------------------------------------------------------------------- Page2.java
import java.io.IOException;
import java.io.PrintWriter;
import javax.servlet.ServletException;
import javax.servlet.http.*;
public class Page2 extends HttpServlet {
public void doGet(HttpServletRequest request, HttpServletResponse response)
throws ServletException, IOException {
response.setContentType("text/html;charset=UTF-8");
PrintWriter out = response.getWriter();
out.println("<html><head><title>Servlet Page2</title></head>");
HttpSession hs = request.getSession(false);
out.println("<h1>Welcome Again on Page No. 2</h1>");
int visit = Integer.parseInt((String)hs.getAttribute("visit"))+1;
out.println("<h1>You Visited "+visit+"Times</h1>");
hs.setAttribute("visit", ""+visit);
out.println("<h1>Your Session ID is "+hs.getId()+"</h1>");
out.println("<h1>You Logged in at "+new java.util.Date(hs.getCreationTime())+"</h1>");
out.println("<h1><a href=Page1>Click for Page 1 </a></h1>");
out.println("<h1><a href=LogoutServlet>Click for Terminate Session </a></h1>");
out.println("</body></html>");
}
}
---------------------------------------------------------------------------------------------------------------- LogoutServlet.java
import java.io.IOException;
import java.io.PrintWriter;
import javax.servlet.ServletException;
import javax.servlet.http.*;
public class LogoutServlet extends HttpServlet {
public void doGet(HttpServletRequest request, HttpServletResponse response)
throws ServletException, IOException {
response.setContentType("text/html;charset=UTF-8");
PrintWriter out = response.getWriter();
out.println("<html><head><title>Servlet LogoutServlet</title></head>");
out.println("<body>");
HttpSession hs = request.getSession();
if(hs != null) hs.invalidate();
out.println("<h1>You are Logged out now........</h1>");
out.println("</body></html>");
}
}
---------------------------------------------------------------------------------------------------------------- Output :

Practical No.3
Date : / /
3a. Aim : Create a Servlet application to upload and download a file. CODE :
UPLOAD FILE
index.html
<html><body>
]<form action="FileUploadServlet" method="post" enctype="multipart/form-data">
Select File to Upload:<input type="file" name="file" id="file">
Destination <input type="text" value="" name="destination"><br>
<input type="submit" value="Upload file" name="upload" id="upload">
</form></body></html>
---------------------------------------------------------------------------------------------------------------- FileUploadServlet.java
import java.io.*;
import javax.servlet.*;
import javax.servlet.annotation.MultipartConfig;
import javax.servlet.http.*;
@MultipartConfig
public class FileUploadServlet extends HttpServlet {
public void doPost(HttpServletRequest request,HttpServletResponse response) throws
ServletException, IOException {
response.setContentType("text/html");
PrintWriter out = response.getWriter();
String path=request.getParameter("destination");
Part filePart=request.getPart("file");
String filename=filePart.getSubmittedFileName().toString();
out.print("<br><br><hr> file name: "+filename);
OutputStream os=null;
InputStream is=null;
try {
os=new FileOutputStream(new File(path+File.separator+filename));
is=filePart.getInputStream();
int read=0;
while ((read = is.read()) != -1) {
os.write(read);
}
out.println("<br>file uploaded sucessfully...!!!");
}
catch(FileNotFoundException e){out.print(e);}
}
}
---------------------------------------------------------------------------------------------------------------- Output :
DOWNLOAD FILE :
index.html
<html><head><title>File Download Page</title>
</head> <body> <h1>File Download Application</h1>
Click <a href="DownloadServlet?filename=EJ Lab Manual.pdf">EJ Manual</a>
<br/><br/>Click <a href="DownloadServlet?filename=AI.pdf">AI</a>
</body> </html>
---------------------------------------------------------------------------------------------------------------- **(Once you create the project for downloading a file, copy any 2 files (pdf, docx) that
already exists on your pc and paste both the files in the WEB PAGES folder of your
project. Right Click on WEB PAGES -> paste and then write your own file name in the
above html code in place of - “EJ Lab Manual.pdf” and “AI.pdf”)
Example : If 1 of your file names is ‘EJ.pdf’ then, on the 3
rd
line write “filename=EJ.pdf”
---------------------------------------------------------------------------------------------------------------- DownloadServlet.java
import java.io.InputStream;
import javax.servlet.ServletContext;
import javax.servlet.ServletOutputStream;
public class DownloadServlet extends HttpServlet {
@Override
protected void doGet(HttpServletRequest request, HttpServletResponse response)
throws ServletException, IOException {
response.setContentType("APPLICATION/OCTET-STREAM");
String filename = request.getParameter("filename");
ServletContext context = getServletContext();
InputStream is = context.getResourceAsStream("/" + filename);
PrintWriter out = response.getWriter();
response.setHeader("Content-Disposition", "attachment; filename=\"" + filename + "\"");
int i;
while ((i = is.read()) != -1) {
out.write(i);
}
is.close();
out.close();
}
}
---------------------------------------------------------------------------------------------------------------- Output :
Date : / /
3b. Aim : Develop Simple Servlet Question Answer Application using Database. CODE :
for Database
>> create database qadb;
>> use qadb;
>> create table quiz (qno varchar(5) PRIMARY KEY, question varchar(100), op1
varchar(50), op2 varchar(50), op3 varchar(50), op4 varchar(50), ans varchar(50));
>> insert into quiz values ('001', 'Unit of Energy is ___', 'Dozen','Kilometre', 'Joule',
'Hertz','Joule');
>> insert into quiz values ('002', 'Following is the extension for saving a python file',
'.jpg','.py', '.docx', '.cs','.py');
>> insert into quiz values ('003', '___ is the largest continent', 'Asia','Antarctica', 'Europe',
'Australia','Asia');
>> insert into quiz values ('004', '___ is the smallest memory unit', 'bit','byte', 'Kilo Byte',
'Gigabyte','bit');
>> insert into quiz values ('005', 'Which is the only liquid metal', 'Steel','Aluminium',
'Magnesium', 'Mercury','Mercury'); ----------------------------------------------------------------------------------------------------------------
index.html
<html><head><title>Quiz Application</title></head>
<body><h1>Welcome to Quiz Servlet </h1>
<h1><a href="QuizServlet" >CLICK TO START QUIZ</a></h1> </body></html>
---------------------------------------------------------------------------------------------------------------- QuizServlet.java
import java.io.*;
import java.sql.*;
import javax.servlet.*;
import javax.servlet.http.*;
public class QuizServlet extends HttpServlet {
public void doGet(HttpServletRequest request, HttpServletResponse response)
throws ServletException, IOException {
response.setContentType("text/html;charset=UTF-8");
PrintWriter out = response.getWriter();
out.println("<form action=ShowResult >");
try {
Class.forName("com.mysql.jdbc.Driver");
Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/qadb","root","root");
Statement stmt = con.createStatement();
ResultSet res = stmt.executeQuery("select * from quiz");
out.println("<table border=1 >");
int qno=0;
while(res.next()) {
qno++;
out.println("<tr><td>"+res.getString(1)+"</td>");
out.println("<td>"+res.getString(2)+"</td></tr>");
out.println("<tr><td><input type=radio name="+qno+" value="+res.getString(3)+"></td><td>"+res.getString(3)+"</td></tr>");
out.println("<tr><td><input type=radio name="+qno+" value="+res.getString(4)+"></td><td>"+res.getString(4)+"</td></tr>");
out.println("<tr><td><input type=radio name="+qno+" value="+res.getString(5)+"></td><td>"+res.getString(5)+"</td></tr>");
out.println("<tr><td><input type=radio name="+qno+" value="+res.getString(6)+"></td><td>"+res.getString(6)+"</td></tr>");
}
} catch (Exception e) {out.println(e);}
out.println("</table>");
out.println("<input type=reset >");
out.println("<input type=submit value=SUBMIT >");
out.println("</form>");
}
}
ShowResult.java
import java.io.*;
import java.sql.*;
import javax.servlet.*;
import javax.servlet.http.*;
public class ShowResult extends HttpServlet {
public void doGet(HttpServletRequest request, HttpServletResponse response)
throws ServletException, IOException {
response.setContentType("text/html;charset=UTF-8");
PrintWriter out = response.getWriter();
try {
Class.forName("com.mysql.jdbc.Driver");
Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/qadb","root","root");
Statement stmt = con.createStatement();
ResultSet res = stmt.executeQuery("select ans from quiz");
int count =0, qno=0;
while (res.next()) {
if (res.getString(1).equals(request.getParameter(""+(++qno)))) {
count++;
out.println("<h1>Correct </h1>");
}
else {
out.println("<h1>Incorrect </h1>");
}
}
out.println("<h1>Your Score is "+count+" </h1>");
}catch (Exception e) {out.println(e);}
}
}
Output :
Practical No.4
Date : / /
4a. Aim : Develop a simple JSP application to display values obtained from the use of
intrinsic objects of various types. CODE :
index.jsp
<%@page contentType="text/html" pageEncoding="UTF-8"%>
<html><head><title>JSP Page</title></head><body>
<h1>Use of Intrinsic Objects in JSP</h1><h1>Request Object </h1>
Query String <%=request.getQueryString() %><br>
Context Path <%=request.getContextPath() %><br>
Remote Host <%=request.getRemoteHost() %><br>
<h1>Response Object </h1>
Character Encoding Type <%=response.getCharacterEncoding() %><br>
Content Type <%=response.getContentType() %><br>
Locale <%=response.getLocale() %><br>
<h1>Session Object </h1> ID <%=session.getId() %><br>
Creation Time <%=new java.util.Date(session.getCreationTime()) %><br>
Last Access Time<%=new java.util.Date(session.getLastAccessedTime()) %><br>
</body></html>
---------------------------------------------------------------------------------------------------------------- Output :
Date : / /
4b. Aim : Develop a simple JSP application to pass values from one page to another with
validations. (Name-txt, age-txt, hobbies-checkbox, email-txt, gender-radio button). CODE :
index.html
<!DOCTYPE html>
<html><head><title>Form Page</title><script type="text/javascript">
function validateForm() {
var name = document.forms["myForm"]["name"].value;
var age = document.forms["myForm"]["age"].value;
var email = document.forms["myForm"]["email"].value;
var hobbies = document.forms["myForm"]["hobbies"];
var gender = document.forms["myForm"]["gender"];
if (name == "") {
alert("Name must be filled out");
return false; }
if (age == "" || isNaN(age) || age < 1 || age > 100) {
alert("Please enter a valid age");
return false; }
if (!validateHobbies(hobbies)) {
alert("Please select at least one hobby");
return false; }
if (!validateGender(gender)) {
alert("Please select your gender");
return false; }
if (email == "" || !email.match(/^\S+@\S+\.\S+$/)) {
alert("Please enter a valid email");
return false;
} return true; }
function validateHobbies(hobbies) {
for (var i = 0; i < hobbies.length; i++) {
if (hobbies[i].checked) {
return true;
}
} return false; }
function validateGender(gender) {
for (var i = 0; i < gender.length; i++) {
if (gender[i].checked) {
return true; }
} return false;
} </script>
</head><body> <h2>Enter Your Details</h2>
<form name="myForm" action="Validate.jsp" onsubmit="return validateForm()" method="post">
Name: <input type="text" name="name"><br><br>
Age: <input type="text" name="age"><br><br>
Email: <input type="text" name="email"><br><br>
Gender: <br>
<input type="radio" name="gender" value="Male"> Male<br>
<input type="radio" name="gender" value="Female"> Female<br><br>
Hobbies: <br>
<input type="checkbox" name="hobbies" value="Reading"> Reading<br>
<input type="checkbox" name="hobbies" value="Music"> Music<br>
<input type="checkbox" name="hobbies" value="Sports"> Sports<br><br>
<input type="submit" value="Submit">
</form> </body></html>
---------------------------------------------------------------------------------------------------------------- Validate.jsp
<%@ page contentType="text/html;charset=UTF-8" language="java" %>
<!DOCTYPE html>
<html><head> <title>Result Page</title></head><body>
<h1>Validated Successfully!!</h1> <h2>Your Submitted Information</h2>
<% String name = request.getParameter("name");
String age = request.getParameter("age");
String email = request.getParameter("email");
String gender = request.getParameter("gender");
String[] hobbies = request.getParameterValues("hobbies"); %>
<p><strong>Name:</strong> <%= name %></p>
<p><strong>Age:</strong> <%= age %></p>
<p><strong>Email:</strong> <%= email %></p>
<p><strong>Gender:</strong> <%= gender %></p>
<p><strong>Hobbies:</strong></p>
<ul> <%
if (hobbies != null) {
for (String hobby : hobbies) {
out.println("<li>" + hobby + "</li>");
}
} else {
out.println("<li>No hobbies selected</li>");
} %>
</ul>
</body> </html>
---------------------------------------------------------------------------------------------------------------- Output :

Date : / /
4c. Aim : Create a registration and login JSP application to register and authenticate the user
based on username and password using JDBC. CODE :
for database
>> create table users(username varchar(20) PRIMARY KEY, password1
varchar(20),password2 varchar(20), email varchar(20), country varchar(20));
>> insert into users values ('Diksha','admin','admin','admin@admin.com','India'); ----------------------------------------------------------------------------------------------------------------
login.html
<html><body><h1>Login Page</h1> <form action="Login.jsp" >
Enter User Name <input type="text" name="txtName" ><br>
Enter Password <input type="password" name="txtPass" ><br>
<input type="reset" ><input type="submit" value="LOGIN" >
</form></body></html>
---------------------------------------------------------------------------------------------------------------- Login.jsp
<%@page contentType="text/html" import="java.sql.*"%>
<html><body><h1>Registration JSP Page</h1>
<% String uname=request.getParameter("txtName");
String pass = request.getParameter("txtPass");
try{
Class.forName("com.mysql.jdbc.Driver");
Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/logindb","root","root");
PreparedStatement stmt = con.prepareStatement("select password1 from users where
username=?");
stmt.setString(1, uname);
ResultSet rs = stmt.executeQuery();
if(rs.next()) {
if(pass.equals(rs.getString(1))) {
out.println("<h1> LOGIN SUCCESSFULLL </h1>");
} } else {
out.println("<h1>User Name not exist !!!!!</h1>"); %>
<jsp:include page="register.html" ></jsp:include>
<% } } catch(Exception e){out.println(e);}
%> </body></html>
---------------------------------------------------------------------------------------------------------------- register.html
<html><head><title>New User Registration Page</title></head>
<body><form action="Register.jsp" > <h1> New User Registration Page</h1>
Enter User Name <input type="text" name="txtName" ><br>
Enter Password <input type="password" name="txtPass1" ><br>
Re-Enter Password<input type="password" name="txtPass2" ><br>
Enter Email<input type="text" name="txtEmail" ><br>
Enter Country Name <input type="text" name="txtCon" ><br>
<input type="reset" ><input type="submit" value="REGISTER" >
</form></body></html>
---------------------------------------------------------------------------------------------------------------- Register.jsp
<%@page contentType="text/html" import="java.sql.*"%>
<html><body><h1>Registration JSP Page</h1>
<% String uname=request.getParameter("txtName");
String pass1 = request.getParameter("txtPass1");
String pass2 = request.getParameter("txtPass2");
String email = request.getParameter("txtEmail");
String ctry = request.getParameter("txtCon");
if(pass1.equals(pass2)){
try{
Class.forName("com.mysql.jdbc.Driver");
Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/logindb","root","root");
PreparedStatement stmt = con.prepareStatement("insert into users values (?,?,?,?,?)");
stmt.setString(1, uname); stmt.setString(2, pass1); stmt.setString(3, pass1);
stmt.setString(4, email); stmt.setString(5, ctry);
int row = stmt.executeUpdate();
if(row==1) { out.println("Registration Successful"); }
else {
out.println("Registration FAIL !!!!");
%><jsp:include page="register.html" ></jsp:include>
<% } } catch(Exception e){out.println(e);}
} else {
out.println("<h1>Password Mismatch</h1>"); %>
<jsp:include page="register.html" ></jsp:include>
<% } %> </body> </html>
---------------------------------------------------------------------------------------------------------------- Output :

Practical No.5
Date : / /
5a. Aim : Create an html page with fields, eno, name, age, desg, salary. Now on submit this
data to a JSP page which will update the employee table of database with matching eno. CODE :
for database
>> use logindb;
>> create table emp (empid varchar(10) PRIMARY KEY, ename varchar(50), salary
varchar(50), age varchar(50) );
>> insert into emp values ('1', 'aaa', '221234', '11');
>> insert into emp values ('2', 'bbb', '334567', '22');
>> insert into emp values ('3', 'ccc', '44454', '33');
>> insert into emp values ('4', 'ddd', '55123', '44'); ----------------------------------------------------------------------------------------------------------------
index.html
<html><body><form action="UpdateEmp.jsp" >
Enter Employee Number<input type="text" name="txtEno" ><br>
Enter Name<input type="text" name="txtName" ><br>
Enter age<input type="text" name="txtAge" ><br>
Enter Salary<input type="text" name="txtSal" ><br>
<input type="reset" ><input type="submit">
</form></body></html>
---------------------------------------------------------------------------------------------------------------- UpdateEmp.jsp
<%@page contentType="text/html" import="java.sql.*" %>
<html><body> <h1>Employee Record Update</h1> <%
String eno=request.getParameter("txtEno");
String name=request.getParameter("txtName");
String age = request.getParameter("txtAge");
String sal = request.getParameter("txtSal");
try{
Class.forName("com.mysql.jdbc.Driver");
Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/logindb","root","root");
PreparedStatement stmt = con.prepareStatement("select * from emp where empid=?");
stmt.setString(1, eno);
ResultSet rs = stmt.executeQuery();
if(rs.next()){
out.println("<h1>~~~ Employee "+name+" Exist ~~~ </h1>");
PreparedStatement pst1= con.prepareStatement("update emp set salary=? where empid=?");
PreparedStatement pst2= con.prepareStatement("update emp set age=? where empid=?");
pst1.setString(1, sal); pst1.setString(2, eno);
pst2.setString(1, age); pst2.setString(2, eno);
pst1.executeUpdate(); pst2.executeUpdate();
} else {
out.println("<h1>Employee Record not exist !!!!!</h1>");
}
}catch(Exception e){out.println(e);}
%></body></html>
---------------------------------------------------------------------------------------------------------------- Output :

Date : / /
5b. Aim : Create a JSP page to demonstrate the use of Expression language. CODE :
index.jsp
<%@page import="java.util.List"%>
<%@page import="java.util.Arrays"%>
<%@ page contentType="text/html;charset=UTF-8" language="java" %>
<html><head><title>Expression Language</title></head>
<body><h1>Expression Language</h1>
<h2>1. Using Implicit Object: sessionScope</h2>
<%-- Setting session attribute --%>
<%
session.setAttribute("username", "JohnDoe");
%>
Welcome, ${sessionScope.username}!
<h2>2. Using Arithmetic Operators</h2>
<%-- EL Arithmetic: Adding two numbers --%>
${5 + 10}
<h2>3. Using Relational Operators</h2>
<%-- EL Relational: Comparing two numbers --%>
Is 5 greater than 3? ${5 > 3}
<h2>4. Using Logical Operators</h2>
<%-- EL Logical: Combining two conditions --%>
Is 5 greater than 3 and 10 greater than 5? ${5 > 3 && 10 > 5}
<h2>5. Accessing Collection Data</h2>
<%-- EL with a List stored in application scope --%>
<%
List<String> fruits = Arrays.asList("Apple", "Banana", "Orange");
application.setAttribute("fruitList", fruits);
%>
First fruit: ${applicationScope.fruitList[0]}<br/>
Second fruit: ${applicationScope.fruitList[1]}<br/>
Third fruit: ${applicationScope.fruitList[2]}
</body></html>
---------------------------------------------------------------------------------------------------------------- Output :
Date : / /
5c. Aim : Create a JSP application to demonstrate the use of JSTL. CODE :
index.html
<!DOCTYPE html>
<html> <head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>JSP Page</title> </head> <body>
<h1>JSTL TAGS</h1>
<a href="jstl.jsp">Click here</a>
</body> </html>
----------------------------------------------------------------------------------------------------------------
jstl.jsp
<%@ page contentType="text/html; charset=UTF-8" language="java" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<!DOCTYPE html>
<html lang="en"> <head> <meta charset="UTF-8">
<title>JSTL Example</title> </head>
<body> <h1>JSTL Example</h1>
<c:set var="message" value="Hello, JSTL World!" />
<p>${message}</p>
<c:set var="fruits" value="${['Apple', 'Banana', 'Cherry']}" />
<h3>Fruit List:</h3>
<ul>
<c:forEach var="fruit" items="${fruits}">
<li>${fruit}</li>
</c:forEach>
</ul>
<c:if test="${not empty fruits}">
<p>We have some fruits listed!</p>
</c:if>
<h3>Checking the first fruit:</h3>
<c:choose>
<c:when test="${fruits[0] == 'Apple'}">
<p>The first fruit is an Apple.</p>
</c:when>
<c:otherwise>
<p>The first fruit is not an Apple.</p>
</c:otherwise>
</c:choose>
<a href="index.html">Back</a> <!-- Link back to index -->
</body> </html>
---------------------------------------------------------------------------------------------------------------- Output :
Practical No.6
Date : / /
6a. Aim : Create a Currency Converter application using EJB. CODE :
index.html
<html><head><title>Currency Converter</title></head><body>
<form action="CCServlet" >
Enter Amount <input type="text" name="amt"><br>
Select Conversion Type
<input type="radio" name="type" value="r2d" checked>Rupees to Dollar
<input type="radio" name="type" value="d2r" >Dollar to Rupees<br>
<input type="reset" ><input type="submit" value="CONVERT" >
</form></body>
---------------------------------------------------------------------------------------------------------------- CCServlet.java
package mypack;
import java.io.*;
import javax.servlet.*;
import javax.servlet.http.*;
import javax.ejb.EJB;
import mybeans.CCBean;
public class CCServlet extends HttpServlet {
@EJB CCBean obj;
public void doGet(HttpServletRequest request, HttpServletResponse response)
throws ServletException, IOException {
response.setContentType("text/html;charset=UTF-8");
PrintWriter out = response.getWriter();
double amt = Double.parseDouble(request.getParameter("amt"));
if(request.getParameter("type").equals("r2d")) {
out.println("<h1>"+amt+ " Rupees = "+obj.r2Dollar(amt)+" Dollars</h1>");
}
if(request.getParameter("type").equals("d2r")) {
out.println("<h1>"+amt+ " Dollars = "+obj.d2Rupees(amt)+" Rupees</h1>");
}
}
}
---------------------------------------------------------------------------------------------------------------- CCBean.java
package mybeans;
import javax.ejb.Stateless;
@Stateless
public class CCBean {
public CCBean(){}
public double r2Dollar(double r){ return r/82.53; }
public double d2Rupees(double d){ return d*82.53; }
}
---------------------------------------------------------------------------------------------------------------- Output :
Date : / /
6b. Aim : Develop a Simple Room Reservation System Application Using EJB. CODE :
for database
>> create database rrdb;
>> use rrdb;
>> Create table roombook (RoomId varchar(4) PRIMARY KEY, RoomType varchar(20), charges double(5,2), cust varchar(20), mob varchar(20), status varchar(10));
>> insert into roombook values('1001','Delux',500.00,'','','Not Booked');
>> insert into roombook values('1002','Super Delux',700.00,'','','Not Booked');
>> insert into roombook values('1003','Suit',950.00,'','','Not Booked');
>> insert into roombook values('2001','Delux',500.00,'','','Not Booked');
>> insert into roombook values('2002','Super Delux',700.00,'','','Not Booked');
>> insert into roombook values('2003','Suit',950.00,'','','Not Booked'); ----------------------------------------------------------------------------------------------------------------
index.html
<html><head><title>Room Reservation System</title></head>
<body><form action="RBServlet" >
Select a room Type
<input type="radio" name="txtType" value="Delux">Delux
<input type="radio" name="txtType" value="Super Delux">Super Delux
<input type="radio" name="txtType" value="Suit">Suit<br>
Enter Your Name<input type="text" name="txtCust" ><br>
Enter Mobile No.<input type="text" name="txtMob" ><br>
<input type="reset" ><input type="submit" value="Book Room">
</form></body></html>
---------------------------------------------------------------------------------------------------------------- RBServlet.java
package mypack;
import java.io.*;
import javax.servlet.*;
import javax.servlet.http.*;
import javax.ejb.EJB;
import mybeans.RRBean;
public class RBServlet extends HttpServlet {
@EJB RRBean obj;
public void doGet(HttpServletRequest request, HttpServletResponse response)
throws ServletException, IOException{
PrintWriter out=response.getWriter();
String rt=request.getParameter("txtType");
String cn=request.getParameter("txtCust");
String cm=request.getParameter("txtMob");
String msg = obj.roomBook(rt, cn, cm);
out.println(msg);
}
}
---------------------------------------------------------------------------------------------------------------- RRBean.java
package mybeans;
import javax.ejb.Stateless;
import java.sql.*;
@Stateless
public class RRBean {
public RRBean(){}
public String roomBook(String rt, String cn, String cm){
String msg="";
try{
Class.forName("com.mysql.jdbc.Driver");
Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/rrdb","root","root");
String query="select * from roombook where RoomType=? and status='Not
Booked'";
PreparedStatement pst = con.prepareStatement(query);
pst.setString(1,rt);
ResultSet rs= pst.executeQuery();
if(rs.next()){
String rno=rs.getString(1);
PreparedStatement stm1 = con.prepareStatement("update roombook set
cust=? where RoomId=? ");
PreparedStatement stm2 = con.prepareStatement("update roombook set
mob=? where RoomId=? ");
PreparedStatement stm3 = con.prepareStatement("update roombook set
status=? where RoomId=? ");
stm1.setString(1,cn); stm1.setString(2,rno);
stm2.setString(1,cm); stm2.setString(2,rno);
stm3.setString(1, "Booked"); stm3.setString(2,rno);
stm1.executeUpdate();
stm2.executeUpdate();
stm3.executeUpdate();
msg = "Room "+rno+ " Booked <br> Charges = "+rs.getString(3);
} else {
msg = "Room "+rt+ " currently Not available";
}
}catch(Exception e){msg=""+e;}
return msg;
}
}
Output :
Date : / /
6c. Aim : Develop simple shopping cart application using EJB [Stateful Session Bean]. CODE :
index.html
<!DOCTYPE html>
<html lang="en">
<head> <meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Shopping Cart</title> </head>
<body> <h1>Shopping Cart</h1>
<form action="cart" method="post">
<input type="text" name="item" placeholder="Enter item" required>
<button type="submit" name="action" value="add">Add Item</button>
<button type="submit" name="action" value="remove">Remove Item</button>
<button type="submit" name="action" value="clear">Clear Cart</button> </form>
<form action="cart" method="get">
<button type="submit">View Cart</button> </form>
</body> </html>
---------------------------------------------------------------------------------------------------------------- ShoppingCartServlet.java
package SCart;
import java.io.IOException;
import javax.ejb.EJB;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
@WebServlet("/cart")
public class ShoppingCartServlet extends HttpServlet {
@EJB
private ShoppingCartBean cart;
@Override
protected void doPost(HttpServletRequest request, HttpServletResponse response)
throws ServletException, IOException {
String action = request.getParameter("action");
String item = request.getParameter("item");
if ("add".equals(action)) {
cart.addItem(item);
} else if ("remove".equals(action)) {
cart.removeItem(item);
} else if ("clear".equals(action)) {
cart.clearCart();
}
response.getWriter().println("Cart Contents: " + cart.getItems());
}
@Override
protected void doGet(HttpServletRequest request, HttpServletResponse response)
throws ServletException, IOException {
response.getWriter().println("Cart Contents: " + cart.getItems());
}
}
---------------------------------------------------------------------------------------------------------------- ShoppingCartBean.java
package SCart;
import java.util.ArrayList;
import java.util.List;
import javax.ejb.Stateful;
@Stateful
public class ShoppingCartBean {
private List<String> items;
public ShoppingCartBean() {
items = new ArrayList<>();
}
public void addItem(String item) {
items.add(item);
}
public void removeItem(String item) {
items.remove(item);
}
public List<String> getItems() {
return items;
}
public int getItemCount() {
return items.size();
}
public void clearCart() {
items.clear();
}
}
---------------------------------------------------------------------------------------------------------------- Output :
Adding Apple
Viewing
Adding Mango
Adding Strawberry
Viewing the Cart
Removing an Item
Clearing the Cart
Practical No.7
Date : / /
7a. Aim : Develop simple EJB application to demonstrate Servlet Hit count using Singleton
Session Beans. CODE :
index.html
<html> <head> <meta http-equiv="Refresh" content="0; URL=ServletClient">
</head> <body> </body> </html>
---------------------------------------------------------------------------------------------------------------- ServletClient.java
package servlet;
import java.io.IOException;
import java.io.PrintWriter;
import javax.ejb.EJB;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
@WebServlet(name= "ServletClient", urlPatterns={"/ServletClient"})
public class ServletClient extends HttpServlet {
@EJB CounterServletHitsBean CounterBean;
@Override
protected void service(HttpServletRequest request, HttpServletResponse response)
throws ServletException, IOException {
response.setContentType("text/html;charset=UTF-8");
try (PrintWriter out = response.getWriter()) {
out.println("<!DOCTYPE html>");
out.println("<html>");
out.println("<head>");
out.println("<title>Servlet ServletClient</title>");
out.println("</head>");
out.println("<body>");
out.println("<h1>Number of times this servlet is accessed:" +
CounterBean.incrementAndGetHitCount()+"</h1>");
out.println("</body>");
out.println("</html>");
} } }
---------------------------------------------------------------------------------------------------------------- CounterServletHitsBean.java
package servlet;
import javax.ejb.Singleton;
@Singleton
public class CounterServletHitsBean {
private int hitcount;
public int incrementAndGetHitCount() {
return hitcount++;
} }
---------------------------------------------------------------------------------------------------------------- Output :
Date : / /
7b. Aim : Develop simple visitor Statistics application using Message Driven Bean [Stateless
Session Bean]. CODE :
index.jsp
<%@page import="javax.jms.JMSException"%>
<%@page import="javax.naming.InitialContext"%>
<%@page import="javax.jms.Connection"%>
<%@page import="javax.jms.TextMessage"%>
<%@page import="javax.jms.MessageProducer"%>
<%@page import="javax.jms.Session"%>
<%@page import="javax.jms.Queue"%>
<%@page import="javax.jms.ConnectionFactory"%>
<%@page contentType="text/html" pageEncoding="UTF-8"%>
<!DOCTYPE html>
<%! private static ConnectionFactory connectionFactory;
private static Queue queue;
Connection connection=null;
Session mySession=null;
MessageProducer messageProducer=null;
TextMessage message=null; %>
<html><head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>JSP Page</title></head>
<body> Welcome to My Home Page <%
try{
InitialContext ic= new InitialContext();
queue= (Queue)ic.lookup("jms/Queue");
connectionFactory=(ConnectionFactory)ic.lookup("jms/QueueFactory");
connection= connectionFactory.createConnection();
mySession=connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
messageProducer=mySession.createProducer(queue);
message=mySession.createTextMessage();
message.setText(request.getRemoteAddr());
messageProducer.send(message); }
catch(JMSException e) { System.out.println("Exception Occoured "+e.toString()); } %>
</body></html>
---------------------------------------------------------------------------------------------------------------- VisitorStatBean.java
package ejb;
import java.sql.*;
import javax.annotation.PostConstruct;
import javax.annotation.PreDestroy;
import javax.ejb.Stateless;
@Stateless
public class VisitorStatBean {
private Connection conn=null;
private ResultSet rs;
private Statement st=null;
private String query =null;
@PostConstruct
public void connect() {
try {
Class.forName("com.mysql.jdbc.Driver").newInstance();
conn=DriverManager.getConnection("jdbc:mysql://localhost/visitorstat", "root", "tiger");
}
catch (Exception e) { System.err.println(e.getMessage()); }
@PreDestroy
public void disconnect() {
try {
conn.close();
} catch (Exception e) {
System.err.println(e.getMessage());
} }
public void addVisitor(String host) {
try {
st= conn.createStatement();
query="insert into userstat (hostname,visits) values ('"+host+"','1')";
st.executeUpdate(query);
}
catch (SQLException e) {
try {
st=conn.createStatement();
query="update userstat set visits=visits+1 where hostname='"+host+"' ";
st.executeUpdate(query);
}
catch (SQLException ex) {
System.err.println("Cannot Update"+e.getMessage());
} } } }
---------------------------------------------------------------------------------------------------------------- BasicMessageBean.java
package ejb;
import javax.annotation.Resource;
import javax.ejb.ActivationConfigProperty;
import javax.ejb.EJB;
import javax.ejb.MessageDriven;
import javax.ejb.MessageDrivenContext;
import javax.jms.JMSException;
import javax.jms.Message;
import javax.jms.MessageListener;
import javax.jms.TextMessage;
@MessageDriven(activationConfig = {
@ActivationConfigProperty(propertyName = "destinationLookup", propertyValue =
"jms/Queue"), @ActivationConfigProperty(propertyName = "destinationType", propertyValue =
"javax.jms.Queue")
})
public class BasicMessageBean implements MessageListener {
@EJB VisitorStatBean vs;
@Resource
private MessageDrivenContext mdc;
public BasicMessageBean() {
}
@Override
public void onMessage(Message message) {
try {
if(message instanceof TextMessage){
TextMessage msg= (TextMessage) message;
vs.addVisitor(msg.getText());
} }
catch (JMSException e) {
mdc.setRollbackOnly();
} } }
---------------------------------------------------------------------------------------------------------------- Output :
Date : / /
7c. Aim : Develop simple Marks Entry Application to demonstrate accessing Database using
EJB. CODE :
for database
>> create table studentdata (sname varchar(10), sub1 varchar(10), sub2 varchar(10));
>> insert into studentdata values('aaa', '50', '40'); ----------------------------------------------------------------------------------------------------------------
index.html
<html> <head>
<title>TODO supply a title</title> <meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
</head> <body> <form action="MEServlet" >
Enter Student Name<input type="text" name="sname" ><br>
Enter Subject 1<input type="text" name="sub1"><br>
Enter Subject 2<input type="text" name="sub2" ><br>
<input type="reset" value="RE-ENTER"><input type="submit" value="SUBMIT">
</form> </body> </html>
---------------------------------------------------------------------------------------------------------------- MEServlet.java
import java.io.IOException;
import java.io.PrintWriter;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.ejb.EJB;
import mybeans.MEBean;
public class MEServlet extends HttpServlet {
@EJB MEBean obj;
protected void doGet(HttpServletRequest request, HttpServletResponse response)
throws ServletException, IOException {
String s1=request.getParameter("sub1");
String n=request.getParameter("sname");
String s2=request.getParameter("sub2");
String msg = obj.markenter(n, s1, s2);
response.setContentType("text/html;charset=UTF-8");
try (PrintWriter out = response.getWriter()) {
out.println("<!DOCTYPE html>");
out.println("<html>");
out.println("<head>");
out.println("<title>Servlet MEServlet</title>");
out.println("</head>");
out.println("<body>");
out.println("<h2>"+msg+"</h2>");
out.println("<h1>Servlet MEServlet at " + request.getContextPath() +
"</h1>");
out.println("</body>");
out.println("</html>");
}
}
}
---------------------------------------------------------------------------------------------------------------- MEBean.java
package mybeans;
import javax.ejb.Stateless;
import java.sql.*;
@Stateless
public class MEBean {
public MEBean(){}
public String markenter(String n, String s1,String s2) {
String msg;
try{
Class.forName("com.mysql.jdbc.Driver");
Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/marksdb","root","root");
String query="insert into studentdata values(?,?,?)";
PreparedStatement pst = con.prepareStatement(query);
pst.setString(1,n);
pst.setString(2,s1);
pst.setString(3,s2);
pst.executeUpdate();
msg="Marks entered";
} catch(Exception e){msg=""+e;}
return msg;
}
}
---------------------------------------------------------------------------------------------------------------- Output :
Practical No.8
Date : / /
8a. Aim : Develop a simple Inventory Application Using JPA. CODE :
index.html
<html><body><form action="AddInventory" method="post">
<table><tr><td colspan="2" align="center"><b> Add the item in Inventory </b></td></tr>
<tr><td> Item Name : </td>
<td> <input type="text" name="itemname" maxlength="25" size="50" /></td></tr>
<tr><td> Price : </td>
<td> <input type="number" name="itemprice" size="50" /> </td></tr>
<tr><td> Quantity :</td>
<td> <input type="number" name="itemquantity" /> </td></tr>
<tr><td colspan="2"> <input type="submit" name="AddToInventory" value="AddToInventory" /> </td></tr>
</table></form></body></html>
---------------------------------------------------------------------------------------------------------------- AddInventory.java
package test;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.Persistence;
public class AddInventory extends HttpServlet {
protected void processRequest(HttpServletRequest request, HttpServletResponse response)
throws ServletException, IOException {
response.setContentType("text/html;charset=UTF-8");
try (PrintWriter out = response.getWriter()) {
out.println("<!DOCTYPE html>");
out.println("<html>");
out.println("<head>");
out.println("<title>Servlet AddInventory</title>");
out.println("</head>");
out.println("<body>");
EntityManagerFactory entityManagerFactory =
Persistence.createEntityManagerFactory("p8aPU");
EntityManager entityManager = entityManagerFactory.createEntityManager();
EntityTransaction entityTransaction = entityManager.getTransaction();
Inventory il=new Inventory();
il.setItemName(request.getParameter("itemname"));
il.setItemQuantity(request.getParameter("itemquantity"));
il.setItemPrice(Integer.parseInt(request.getParameter("itemprice")));
il.setSku(Integer.parseInt(request.getParameter("SKU")));
entityTransaction.begin();
entityManager.persist(il);
entityTransaction.commit();
out.println("<h1>Record is added successfully !!! </h1>");
out.println("</body>");
out.println("</html>");
} } }
---------------------------------------------------------------------------------------------------------------- Output :
Practical No.9
Date : / /
9a. Aim : Develop a JPA Application to demonstrate use of ORM associations. CODE :
index.html
<html> <head>
<title>TODO supply a title</title> <meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0"> </head>
<body>
User Details <hr><br><br> <form action="userview.jsp" >
Name <input type="text" name="uname" maxlength="20"><br>
User Type <input type="text" name="utype" maxlength="20">
<br><input type="submit" value="submit">
</form> </body> </html>
---------------------------------------------------------------------------------------------------------------- userview.jsp
<%@page import="java.util.List"%>
<%@page import="java.util.Iterator"%>
<%@page import="hibernate.User"%>
<%!
SessionFactory sf;
org.hibernate.Session ss;
List<hibernate.User> User;
%> <%
sf = new Configuration().configure().buildSessionFactory();
ss= sf.openSession();
Transaction tx=null;
User ur=new User();
try {
tx=ss.beginTransaction();
String uname=request.getParameter("uname");
String utype=request.getParameter("utype");
ur.setUname(uname);
ur.setUtype(utype);
ss.save(ur);
tx.commit();
} catch(Exception e){ out.println("Error"+e.getMessage()); }
try {
ss.beginTransaction();
User=ss.createQuery("from User").list();
} catch(Exception e){ } %>
<html> <head>
<title>Guest View</title>
</head> <body>
Guest View Click here to go <a href="index.html"> BACK </a> <br><br>
<%
Iterator it=User.iterator();
while(it.hasNext()) {
User eachrecord=(User)it.next();
out.print(eachrecord.getUid()+" ");
out.print(eachrecord.getUname()+"<br>");
out.print(eachrecord.getUtype()+"<br><hr>");
}
%>
</body> </html>
hibernate.revenge.xml
<hibernate-reverse-engineering>
<schema-selection match-catalog="userdb"/>
<table-filter match-name="user"/>
</hibernate-reverse-engineering>
---------------------------------------------------------------------------------------------------------------- hibernate.cfg.xml
<hibernate-configuration> <session-factory>
<property name="hibernate.dialect">org.hibernate.dialect.MySQLDialect</property>
<property name="hibernate.dialect">org.hibernate.dialect.MySQLDialect</property>
<property
name="hibernate.connection.url">jdbc:mysql://localhost:3306/userdb?zeroDateTimeBehavio
r=conve
rtToNull</property>
<property name="hibernate.connection.username">root</property>
<property name="hibernate.connection.password">tiger</property>
</session-factory> </hibernate-configuration>
---------------------------------------------------------------------------------------------------------------- User.hbm.xml
<hibernate-mapping>
<class optimistic-lock="version" catalog="userdb" table="user" name="hibernate.User">
<id name="uid" type="java.lang.Integer">
<column name="uid"/>
<generator class="identity"/> </id>
<property name="uname" type="string">
<column name="uname" length="20"/>
</property>
<property name="utype" type="string">
<column name="utype" length="100"/>
</property> </class>
</hibernate-mapping>
---------------------------------------------------------------------------------------------------------------- User.java
package hibernate;
public class User implements java.io.Serializable {
private Integer uid;
private String uname;
private String utype;
public User() { }
public User(String uname, String utype) {
this.uname = uname;
this.utype = utype;
}
public Integer getUid() {
return this.uid;
}
public void setUid(Integer uid) {
this.uid = uid;
}
public String getUname() {
return this.uname;
}
public void setUname(String uname) {
this.uname = uname;
}
public String getUtype() {
return this.utype;
}
public void setUtype(String utype) {
this.utype = utype;
} }
Output :

T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
Practical 1
Q.1 a) Create a simple calculator application using servlet.
CODE:
index.html
<html> 
 <body>
 <form method=post action="CalcServlet">
NO-1 <input type=text name="t1">
NO-2 <input type=text name="t2"> <br> <br>
<input type=submit value="+" name="btn">
<input type=submit value="-" name="btn">
<input type=submit value="*" name="btn">
<input type=submit value="/" name="btn">
 </form>
 </body>
</html>
CalcServlet.java
import java.io.*;
import javax.servlet.*;
import javax.servlet.http.*;
public class CalcServlet extends HttpServlet
{ public void doPost(HttpServletRequest request, HttpServletResponse response) throws 
ServletException, IOException
 { response.setContentType("text/html");
 PrintWriter out = response.getWriter();
 int a=Integer.parseInt(request.getParameter("t1"));
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
 int b=Integer.parseInt(request.getParameter("t2"));
 int c=0;
 String op=request.getParameter("btn");
 if (op.equals("+")) 
c=a+b;
 else if (op.equals("-")) 
c=a-b;
 else if (op.equals("*")) 
c=a*b;
 else if (op.equals("/")) 
c=a/b;
 out.println("<b>"+a+op+b+" = "+c+"<b>");
 }
 }
OUTPUT:
 
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
 
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
Q.1 b) Create a servlet for a login page. If the username and password are correct then 
it says message “Hello ” else a message “login failed”.
CODE:
index.html
<html>
 <body>
 <form action="LoginServlet" method="post">
 UserName : <input type="text" name="uname"><br>
 Password : <input type="password" name="pw"> <br>
 <input type="submit" value="LOGIN">
 </form>
 </body>
</html>
LoginServlet.java
import java.io.*;
import javax.servlet.*;
import javax.servlet.http.*;
public class LoginServlet extends HttpServlet {
 public void doPost(HttpServletRequest request, HttpServletResponse response) throws 
ServletException, IOException
{
 response.setContentType("text/html");
 PrintWriter out = response.getWriter();
 String username=request.getParameter("uname");
 String password=request.getParameter("pw");
 String msg="";
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
 if (username .equals("admin") && password.equals("admin123"))
 msg="Hello "+username;
 else 
 msg="Login failed";
 out.println("<b>"+msg+"<b>");
 }
}
OUTPUT:
 
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
Q.1 c) Create a registration servlet in Java using JDBC. Accept the details such as 
Username, Password, Email, and Country from the user using HTML Form and store 
the registration details in the database.
Code:
MySql Command from mysql software:-
1. Select services -> expand databases -> right click on MySQL server at 
localhost:3306[disconnected] -> click on connect -> enter password (tiger) -> 
OK
2. Again right click on MySQL server at localhost:3306 -> select Create 
database -> enter database name and select the check box to grant permission.
3. Right click on Table under your daatbase
4. Enter table name user by replacing untitled. Click on Add column, name -> 
username, type-> varchar, size-> 20, select checkbox of primary key, again click 
on Add column password varchar size 20, again click on Add column emailid 
varchar(20), again click Add column country varchar 10;
5. add mysql-connector to library folder of the current application
index.html
<html>
 <body>
 <form action="RegistrationServlet" method="post">
 User name : <input type="text" name="uname"> <br>
 Password : <input type="password" name="pw"><br>
 Email Id : <input type="text" name="email"> <br>
 Country : <select name="coun">
 <option>select...
 <option> India
 <option> Bangladesh
 <option> Bhutan
 <option> Canada
 </select> <br>
 <input type="submit" value=" Register">
 </form>
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
 </body> 
</html>
RegistrationServlet.java
import java.io.*;
import java.sql.*;
import javax.servlet.*;
import javax.servlet.http.*;
public class RegistrationServlet extends HttpServlet
{ public void doPost(HttpServletRequest request, HttpServletResponse response) throws 
IOException, ServletException
 { Connection con=null;
 PreparedStatement ps=null;
 response.setContentType("text/html");
 PrintWriter out = response.getWriter();
 String username=request.getParameter("uname");
 String password=request.getParameter("pw");
 String emailid=request.getParameter("email");
 String country=request.getParameter("coun");
 try
 { Class.forName("com.mysql.jdbc.Driver");
 con=DriverManager.getConnection("jdbc:mysql://localhost:3306/registerdb","root","tiger");
 out.println("connection done successfully...");
 ps=con.prepareStatement("insert into user values (?,?,?,?)");
 ps.setString(1,username);
 ps.setString(2,password);
 ps.setString(3,emailid);
 ps.setString(4,country);
 ps.execute();
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
 out.print("Data insserted successfully!!!!");
 }
 catch(Exception e) { out.println(e); }
 out.println("<b>"+"<b>");
 }
}
OUTPUT:
 
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
PRACTICAL 2
Q.2 a) Using Request Dispatcher Interface create a Servlet which will validate the 
password entered by the user, if the user has entered "Servlet" as password, then he 
will be forwarded to Welcome Servlet else the user will stay on the index.html page and 
an error message will be displayed.
CODE:
Index.html
<html>
 <body>
 <form method="post" action="ValidateServlet">
 User Name: <input type="text" name ="un"><br>
 Password: <input type="password" name ="pw"><br>
 <input type="submit" value="Login">
 </form>
 </body>
</html>
ValidateServlet.java
import java.io.*;
import javax.servlet.*;
import javax.servlet.http.*;
public class ValidateServlet extends HttpServlet 
{ public void doPost(HttpServletRequest req, HttpServletResponse res)throws IOException, 
ServletException
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
 { res.setContentType("text/html");
PrintWriter out=res.getWriter(); 
 String username=req.getParameter("un");
String password=req.getParameter("pw");
 if(password.equals("Servlet"))
 {
 req.setAttribute("s1username",username);
 req.setAttribute("s1password",password); 
 RequestDispatcher rd= req.getRequestDispatcher("/WelcomeServlet");
 rd.forward(req, res);
 }
 else
 { 
 out.print("Incorrect password");
 RequestDispatcher rd= req.getRequestDispatcher("/index.html");
 rd.include(req, res);
 }
 }
}
WelcomeServlet.java
import java.io.*;
import javax.servlet.*;
import javax.servlet.http.*;
public class WelcomeServlet extends HttpServlet
{ 
 public void doPost(HttpServletRequest req, HttpServletResponse res) throws ServletException, 
IOException
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
{
 res.setContentType("text/html");
 try (PrintWriter out = res.getWriter()) { 
 String s2username = (String)req.getAttribute("s1username"); 
 String s2password = (String)req.getAttribute("s2password"); 
 out.println("Welcome "+s2username); 
 }
}
}
OUTPUT:
 
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
 
Q.2 b) Create a servlet that uses Cookies to store the number of times a user has visited 
servlet.
CODE:
CookieServlet.java
/*
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
*/
package pract2;
import java.io.*;
import javax.servlet.*;
import javax.servlet.http.*;
public class CookieServlet extends HttpServlet 
{
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
 private int i=1;
 public void doGet(HttpServletRequest request, HttpServletResponse response)
 throws IOException, ServletException
 { response.setContentType("text/html");
 PrintWriter out = response.getWriter();
 String k=String.valueOf(i);
 Cookie c = new Cookie("visit",k);
 response.addCookie(c);
 int j=Integer.parseInt(c.getValue());
 if(j==1)
 {
 out.println("This is the first time you are visiting this page");
 }
 else
 { synchronized(CookieServlet.this)
 { out.println("You visited this page "+i+" times");
 }
 }
 i++; 
 }
}
OUTPUT:
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
 
Q.2 c) Create a servlet demonstrating the use of session creation and destruction. Also 
check whether the user has visited this page first time or has visited earlier also using 
sessions.
CODE:
CalculationVisitServlet.java
package sessionapp;
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
/*
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
*/
package pract2;
/*
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
*/
import java.io.*;
import javax.servlet.*;
import javax.servlet.http.*;
public class HttpSessionServlet extends HttpServlet
{ 
 private int counter;
 public void doGet(HttpServletRequest request, HttpServletResponse response) throws 
ServletException, IOException
 { 
 response.setContentType("text/html");
 PrintWriter out = response.getWriter();
 HttpSession session=request.getSession(true); 
 if(session.isNew())
 { 
 out.print("This is the first time you are visiting this page");
 ++counter;
 }
 else
 { 
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
 synchronized(HttpSessionServlet.this)
 { 
 if(counter==10)
 { session.invalidate();
 counter=0;
 request.getSession(false);
 } 
 else
 out.print("You have visited this page "+(++counter)+ " times");
 } 
 }
 } 
}
OUTPUT:
 
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
PRACTICAL 3
Q.3 a) Create a Servlet application to upload and download a file.
CODE:
Uploading a file
Index.html
 <form action="FileUploadServlet" method="post" enctype="multipart/form-data">
 Select File to Upload:<input type="file" name="file" id="file">
 Destination <input type="text" value="/tmp" name="destination">
 <br>
 <input type="submit" value="Upload file" name="upload" id="upload">
 </form>
FileUploadServlet.java
package fileservletapp;
import java.io.*;
import javax.servlet.*;
import javax.servlet.annotation.MultipartConfig;
import javax.servlet.http.*;
@MultipartConfig
public class FileUploadServlet extends HttpServlet {
public void doPost(HttpServletRequest req,HttpServletResponse res) throws ServletException, 
IOException
{
 res.setContentType("text/html");
 PrintWriter out = res.getWriter();
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
 String path=req.getParameter("destination");
 Part filePart=req.getPart("file");
 String sfilePart=req.getPart("file").toString();
 out.print("<br> filePart: "+sfilePart);
 String filename=filePart.getSubmittedFileName().toString();
 out.print("<br><br><hr> file name: "+filename);
 OutputStream os=null;
 InputStream is=null;
try {
 os=new FileOutputStream(new File(path+File.separator+filename));
 is=filePart.getInputStream();
 int read=0;
 byte[] b=new byte[1024];
 while ((read = is.read(b)) != -1) {
 os.write(b, 0, read);
 }
 out.println("<br>file uploaded sucessfully...!!!");
 }
 catch(FileNotFoundException e){out.print(e);}
} }
Downloading a file
Index.html
<body>
 <h1>File Download Application</h1>
 Click <a href="DownloadServlet?filename=SampleChapter.pdf">Sample Chapter</a>
 <br/><br/>
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
 Click <a href="DownloadServlet?filename=TOC.pdf">Table Of Contents</a>
 </body>
DownloadServlet.java
package filedownloadapp;
import java.io.*;
import javax.servlet.*;
import javax.servlet.http.*;
public class DownloadServlet extends HttpServlet 
{ public void doGet(HttpServletRequest request, HttpServletResponse response)
throws ServletException, IOException 
{ response.setContentType("APPLICATION/OCTET-STREAM"); 
 String filename = request.getParameter("filename"); 
 ServletContext context = getServletContext();
InputStream is = context.getResourceAsStream("/" + filename);
 ServletOutputStream os = response.getOutputStream();
 response.setHeader("Content-Disposition","attachment; filename=\"" + filename + "\""); 
// if comment this statement then it will ask you about the editor with which you want to open the file 
 int i;
 byte b[]=new byte[1024];
 while ((i=is.read(b)) != -1) {
 os.write(b); 
 } 
 is.close(); 
 os.close(); 
}
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
}
OUTPUT:
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
Q.3 b) Develop Simple Servlet Question Answer Application using Database.
Create a table in mysql
 Click on ‘Services’ tab
 Create a database
 Database name: queansdb
 Table name: queans
 Fields:
o queno integer primary key
o question varchar 200
o opt1 varchar 100
o opt2 varchar 100
o opt3 varchar 100
o opt4 varchar 100
o anskey varchar 1
Insert min 2 records
Right click on table-> click on ‘view data’ -> right click on empty dataset -> insert a record 
> click on ‘Add Row’ -> OK
add mysql connector to Libray
 click on projects tab
 right click on libraries 
 click on add jar
 browse the connector ‘mysql-connector-java-5.1.23-bin’ 
 in folder: C:\Program Files\NetBeans 8.0\ide\modules\ext
click on OK
CODE:
QueAnsDBServlet.java
package dbapp;
import javax.servlet.*;
import javax.servlet.http.*;
import java.io.*;
import java.sql.*;
public class QueAnsDBServlet extends HttpServlet
{
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
 public void doGet(HttpServletRequest request, HttpServletResponse response) throws 
ServletException, IOException
 {
 response.setContentType("text/html");
 PrintWriter out = response.getWriter();
 try
 {
 out.print("<html><body><br>");
 out.println("<form method='post' action='Marks'>");
 Class.forName("com.mysql.jdbc.Driver");
 Connection con=DriverManager.getConnection("jdbc:mysql://localhost/queansdb","root","tiger");
 Statement st = con.createStatement();
 String sql="select * from queans";
 ResultSet rs = st.executeQuery(sql);
 int i=0;
 out.print("<center>Online Exam</center>");
 while(rs.next())
 {
 i++;
 out.print("<br><br><hr>"+rs.getInt(1)+" ");
 out.print(rs.getString(2));
 out.print("<br><input type=radio name="+i+" value=1>"+rs.getString(3));
 out.print("<br><input type=radio name="+i+" value=2>"+rs.getString(4));
 out.print("<br><input type=radio name="+i+" value=3>"+rs.getString(5));
 out.print("<br><input type=radio name="+i+" value=4>"+rs.getString(6));
 String ans="ans"+i;
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
 out.println("<br><input type=hidden name="+ans+" value="+rs.getString(7)+">");
 }
 out.println("<br><input type=hidden name=total value="+i+">");
 out.println("<input type=submit value=submit>");
 
 out.println("</form>");
 out.print("</body></html>");
 }
catch(Exception e)
 {
 out.println("ERROR "+e.getMessage());
 }
 }
}
Marks.java
package dbapp;
import javax.servlet.*;
import javax.servlet.http.*;
import java.io.*;
public class Marks extends HttpServlet
{ public void doPost(HttpServletRequest request, HttpServletResponse response) throws 
ServletException, IOException
 { response.setContentType("text/html");
 PrintWriter out = response.getWriter();
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
 try
 { out.print("<html><body>");
 int total=Integer.parseInt(request.getParameter("total"));
 int marks=0;
 for(int i=1; i<=total; i++)
 {
 String sel=request.getParameter(new Integer(i).toString());
 String ans=request.getParameter("ans"+i);
 if (sel.equals(ans)) marks++;
 }
 out.println("Total Marks : "+marks);
 out.print("</body></html>");
 }
 catch(Exception e)
 { 
 out.println("ERROR "+e.getMessage());
 }
 }
}
Righclick on QueAnsDbServlet and Run
OUTPUT:
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
Q.3 c) Create simple Servlet application to demonstrate Non-Blocking Read Operation.
CODE:
Index.html
<html>
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
 <body>
 <a href="NonBlockingServlet">Non Blocking Servlet</a>
 </body>
</html>
ReadingListener.java
package nonblkapp;
import java.io.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.servlet.*;
public class ReadingListener implements ReadListener
{ ServletInputStream input = null;
 AsyncContext ac = null;
 ReadingListener(ServletInputStream in, AsyncContext c) {
 input = in;
 ac = c;
 }
 @Override
 public void onDataAvailable() {
 } 
 public void onAllDataRead() 
 { ac.complete();
 }
 public void onError(Throwable t)
 { ac.complete();
 t.printStackTrace();
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
 } 
}
ReadingNonBlockingServlet.java
package nonblkapp;
import java.io.*;
import javax.servlet.*;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.*;
@WebServlet (name = "ReadingNonBlockingServlet", urlPatterns = 
{"/ReadingNonBlockingServlet"},asyncSupported = true )
public class ReadingNonBlockingServlet extends HttpServlet {
@Override
 protected void service(HttpServletRequest request, HttpServletResponse response)
 throws ServletException, IOException 
 { response.setContentType("text/html");
 AsyncContext ac = request.startAsync();
 ServletInputStream in=request.getInputStream();
 in.setReadListener(new ReadingListener(in,ac));
 }
} 
NonBlockingServlet.java
package nonblkapp;
import java.io.*;
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.servlet.*;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.*;
@WebServlet(name = "NonBlockingServlet", urlPatterns = {"/NonBlockingServlet"})
public class NonBlockingServlet extends HttpServlet {
 @Override
 protected void service(HttpServletRequest request, HttpServletResponse response) throws 
ServletException, IOException {
 response.setContentType("text/html");
 PrintWriter out = response.getWriter();
 String filename = "booklist.txt";
 ServletContext c = getServletContext();
 InputStream is = c.getResourceAsStream("/"+filename);
 InputStreamReader isr = new InputStreamReader(is);
 BufferedReader br = new BufferedReader(isr);
 String path = "http://" + request.getServerName() + ":" + request.getServerPort() + 
request.getContextPath() + "/ReadingNonBlockingServlet";
 out.println("<h1>File Reader</h1>");
 //out.flush();
 URL url = new URL(path);
 HttpURLConnection hc = (HttpURLConnection) url.openConnection();
 hc.setChunkedStreamingMode(2); //2bytes at a time
 hc.setDoOutput(true); // true if URL connection done
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
 hc.connect();
 String text = "";
 System.out.println("Reading started...");
 BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(hc.getOutputStream()));
 while ((text = br.readLine()) != null) 
 {
 bw.write(text);
 bw.flush();
 out.println(text+"<br>");
 out.flush();
 try
 {
 Thread.sleep(1000);
 }
 catch (Exception ex) 
 {
 out.print(ex);
 }
 }
 bw.write("Reading completed...");
 bw.flush();
 bw.close();
 }
}
OUTPUT:
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
 
PRACTICAL 4
Q.4 a) Develop a simple JSP application to display values obtained from the use of 
intrinsic objects of various types.
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
CODE:
index.jsp 
<html>
<body>
<form action="implicitObjectEx.jsp">
Enter your name:<input type="text" name="myname"><br>
Enter your email id:<input type="text" name="mymailid"><br>
<input type="submit" value="submit">
</form>
</body>
</html>
implicitObjectEx.jsp
<%@page contentType="text/html" pageEncoding="UTF-8"%>
<html>
<head>
<title>JSP Page</title>
</head>
<body>
<h1>Use of Intrinsic Objects in JSP</h1>
<h1>Request Object</h1>
Query String<%=request.getQueryString() %><br>
Context Path<%=request.getContextPath() %><br>
Remote Host<%=request.getRemoteHost() %><br>
<h1>Response Object</h1>
Character Encoding Type<%=response.getCharacterEncoding() %><br>
Content Type <%=response.getContentType() %><br>
Locale <%=response.getLocale() %><br>
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
<h1>Session Object</h1>
ID<%=session.getId() %><br>
Creation Time<%=new java.util.Date(session.getCreationTime()) %><br>
Last Access Time<%=new java.util.Date(session.getLastAccessedTime()) %><br>
</body>
</html>
OUTPUT:
Q.4 b) Develop a simple JSP application to pass values from one page to another with 
validations. (Name-txt, age-txt, hobbies-checkbox, email-txt, gender-radio button).
CODE:
Index.jsp
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
<html>
<body>
<form action="Validate.jsp">
Enter Your Name <input type="text" name="name"><br>
Enter Your Age <input type="text" name="age"><br>
Select Hobbies <input type="checkbox" name="hob" value="Singing">Singing
<input type="checkbox" name="hob" value="Reading">Reading Books
<input type="checkbox" name="hob" value="Football">Playing Football<br>
Enter E-mail<input type="text" name="email"><br>
Select Gender <input type="radio" name="gender" value="male">Male
<input type="radio" name="gender" value="female">Female
<input type="radio" name="gender" value="other">Other<br>
<input type="hidden" name="error" value="">
<input type="submit" value="Submit Form">
</form >
</body>
</html>
CheckerBean.java
package mypack;
import java.beans.*;
import java.io.Serializable;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
public class CheckerBean
{
String name,hob,email,gender,error;
int age;
public CheckerBean()
{
name="";
hob="";
email="";
gender="";
error="";
age=0;
}
public void setName(String n)
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
{
name=n;
}
public String getName()
{
return name;
}
public void setAge(int a)
{
age=a;
}
public int getAge()
{
return age;
}
public void setHob(String h)
{
hob=h;
}
public String getHob()
{
return hob;
}
public void setEmail(String e)
{
email=e;
}
public String getEmail()
{
return email;
}
public void setGender(String g)
{
gender=g;
}
public String getGender()
{
return gender;
}
public String getError()
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
{
return error;
}
public boolean validate()
{
boolean res=true;
if(name.trim().equals(""))
{
error+="<br>Enter First Name";
res=false;
}
if(age<0||age>99)
{
error+="<br>Age Invalid";
res=false;
}
String emailregex="^[_A-Za-z0-9-]+(\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\.[A-Za-z0-9
-]+)*(\\.[A-Za-z]{2,})$";
Boolean b=email.matches(emailregex);
if(!b)
{
error+="<br>email Invalid";
res=false;
}
return res;
}
}
Validate.jsp
<%@page contentType="text/html" pageEncoding="UTF-8" import="mypack.*"%>
<html>
<head>
<title>JSP Page</title>
</head>
<body>
<h1>Validation Page</h1>
<jsp:useBean id="obj" scope="request"
class="mypack.CheckerBean" >
<jsp:setProperty name="obj" property="*"/>
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
</jsp:useBean>
<%if(obj.validate())
{%>
<jsp:forward page="successful.jsp"/>
<% }
else {%>
<jsp:include page="index.html"/>
<%}%>
<%=obj.getError() %>
</body>
</html>
successful.jsp
<%@page contentType="text/html" pageEncoding="UTF-8"%>
<!DOCTYPEhtml>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>JSP Page</title>
</head>
<body>
<h1>DATA VALIDATED SUCCESSFULLY</h1>
</body>
</html>
OUTPUT:
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
Q.4 c) Create a registration and login JSP application to register and authenticate the 
user based on username and password using JDBC.
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
CODE:
Index.html
<html>
<head>
<title>New User Registration Page</title>
</head>
<body>
<form action="Registration.jsp">
<h1>New User Registration Page</h1>
Enter User Name<input type="text" name="txtName"><br>
Enter Password<input type="password" name="txtPass1"><br>
Re-Enter Password<input type="password" name="txtPass2"><br>
Enter Email<input type="text" name="txtEmail"><br>
Enter Country Name<select name="txtCon">
<option>India</option>
<option>France</option>
<option>England</option>
<option>Argentina</option>
</select><br>
<input type="submit" value="REGISTER"><input type="reset">
</form>
</body>
</html>
Registration.jsp
<%@page contentType="text/html" import="java.sql.*"%>
<html><body>
<h1>Registration JSP Page</h1>
<%
String uname=request.getParameter("txtName");
String pass1=request.getParameter("txtPass1");
String pass2=request.getParameter("txtPass2");
String email=request.getParameter("txtEmail");
String ctry=request.getParameter("txtCon");
if(pass1.equals(pass2))
{
try
{
Class.forName("com.mysql.jdbc.Driver");
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
Connection 
con=DriverManager.getConnection("jdbc:mysql://localhost:3306/logindb",”root”,”tiger”);
PreparedStatement stmt=con.prepareStatement("insert into userpass values(?,?,?,?)");
stmt.setString(1,uname);
stmt.setString(2,pass1);
stmt.setString(3,email);
stmt.setString(4,ctry);
int row=stmt.executeUpdate();
if(row==1)
{
out.println("Registration Successful");}
else
{
out.println("Registration FAILED!!!!");
%>
<jsp:include page="index.html"></jsp:include>
<%
}
}catch(Exception e){out.println(e);}
}
else
{
out.println("<h1>Password Mismatch</h1>");
%>
<jsp:include page="index.html"></jsp:include>
<% }
%>
</body>
</html>
Login.html
<html>
<body>
<h1>Login Page</h1>
<form action="Login.jsp">
Enter User Name<input type="text" name="txtName"><br>
Enter Password<input type="password" name="txtPass"><br>
<input type="submit" value="~~~LOGIN~~"><input type="reset">
</form>
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
</body>
</html>
Login.jsp
<%@page contentType="text/html" import="java.sql.*"%>
<html><body>
<h1>Registration JSP Page</h1>
<%
String uname=request.getParameter("txtName");
String pass=request.getParameter("txtPass");
ResultSet rs=null;
try{
Class.forName("com.mysql.jdbc.Driver");
Connection 
con=DriverManager.getConnection("jdbc:mysql://localhost:3306/logindb"",”root”,”tiger”);
Statement stmt=con.createStatement();
rs=stmt.executeQuery("select password from userpass where username='"+uname+"'");
rs.next();
if(pass.equals(rs.getString(1)))
{
out.println("<h1>~~~LOGIN SUCCESSFULLL~~~</h1>");
}
else
{
out.println("<h1>password does not match!!!!!</h1>");
%>
<jsp:include page="index.html"></jsp:include>
<%
}
}catch(Exception e){
out.println("<h1>User does not exist!!!!!</h1>");
%>
<jsp:include page="index.html"></jsp:include>
<%
}
%>
</body>
</html>
OUTPUT:
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
 
PRACTICAL 5
Q.5 a) Create an html page with fields, eno, name, age, desg, salary. Now on submit this 
data to a JSP page which will update the employee table of database with matching eno.
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
CODE:
Index.html
<html>
<body>
<form action="UpdateEmp.jsp" >
Enter Employee Number<input type="text" name="txtEno" ><br>
Enter Salary to update<input type="text" name="txtSal" ><br>
<input type="reset" ><input type="submit">
</form>
</body>
</html>
UpdateEmp.jsp
<%@page contentType="text/html" import="java.sql.*" %>
<html>
<body>
<h1>Updating Employee Record</h1>
<%
String eno=request.getParameter("txtEno");
String sal = request.getParameter("txtSal");
try{
Class.forName("com.mysql.jdbc.Driver");
Connection con =
DriverManager.getConnection("jdbc:mysql://localhost:3306/empdb","root","tiger");
PreparedStatement stmt = con.prepareStatement("select * from emp where
empno=?");
stmt.setString(1, eno);
ResultSet rs = stmt.executeQuery();
if(rs.next()){
out.println("<h1> Employee "+rs.getString(2)+" Exist </h1>");
PreparedStatement pst= con.prepareStatement("update emp set salary=? where
empno=?");
pst.setString(1, sal);
pst.setString(2, eno);
pst.executeUpdate();
out.println("<h1>Employee Record updated !!!!!</h1>");
}
else{
out.println("<h1>Employee Record not exist !!!!!</h1>");
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
}
}catch(Exception e){out.println(e);}
%>
</body>
</html>
OUTPUT:
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
 
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
Q.5 b) Create a JSP page to demonstrate the use of Expression language.
CODE:
a. Index.jsp
<body>
<h3>welcome to index page</h3>
<%
session.setAttribute("user","Admin");
%>
<%
Cookie ck=new Cookie("name","mycookie");
response.addCookie(ck);
%>
<form action="ExpressionLanguage.jsp">
Enter Name:<input type="text" name="name" /><br/><br/>
<input type="submit" value="Submit"/>
</form>
</body>
b. ExpressionLanguage.jsp
<body>
Welcome, ${ param.name }
Session Value is ${ sessionScope.user }
Cookie name is , ${cookie.name.value}
</body>
c. ELArithemeticOperator.jsp
<body>
<%-- arithmetic op --%>
5*5+4: ${5*5+4} <br>
1.4E4+1.4: ${1.4E4+1.4}<br>
10 mod 4: ${10 mod 4}<br>
15 div 3: ${15 div 3}<br>
</body>
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
d. ELLogicalOperator.jsp
<body>
<%-- LogicalOperator --%>
<h2>Logical Operator</h2>
true and true: ${true and true}<br>
true && false: ${true && false}<br>
true or true: ${true or true}<br>
true || false: ${true || false}<br>
not true: ${not true}<br>
!false: ${!false}
</body>
e. ELRelationalOperator.jsp
<body>
<%-- RelationalOperator --%>
<h2>Relational Operator</h2>
10.0==10: ${10.0==10} <br>
10.0 eq 10: ${10.0 eq 10} <br>
((20*10)!= 200): ${((20*10)!= 200)} <br>
3 ne 3: ${3 ne 3} <br>
3.2>=2: ${3.2>=2} <br>
3.2 ge 2: ${3.2 ge 2} <br>
2<3: ${2<3} <br>
4 lt 6: ${4 lt 6} <br>
2 <= 4: ${2 <= 4} <br>
4 le 2: ${4 le 2}
</body>
f. ELconditional op
<body>
<h2>Conditional Operator</h2>
The result of 10>2 is: "${(10>1)?'greater':'lesser'}"
</body>
g. Empty Operator
<H1>Empty Operator Example</H1>
The Value for the Empty operator is:: ${empty "txxt"}
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
OUTPUT:
 
 
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
 
 
 
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
Q.5 c) Create a JSP application to demonstrate the use of JSTL.
CODE:
index.html
<html><body>
<a href="setDemo.jsp"> SetDemo</a>
<a href="Maxif.html"> MaxIF</a>
<a href="forEachDemo.jsp"> ForEachDemo</a>
<a href="outDemo.jsp"> OutDemo</a>
<a href="URLDemo.jsp"> URLDemo</a>
<a href="choose_when_otherwise.jsp"> choose_when_otherwise</a>
</body></html>
setDemo.jsp
<%@taglib prefix="c" uri="http://java.sun.com/jstl/core" %>
<c:set var="pageTitle" scope="application"
value="Dukes Soccer League: Registration" />
${pageTitle} 
Maxif.html
<form action ="IFDemo.jsp">
 x=<input type="text" name="x" /><br>
 y=<input type="text" name="y" /><br>
 <input type="submit" value="Check Max" />
 </form>
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
IFDemo.jsp
<%@taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<c:set var="x" value="${param.x}"/>
<c:set var="y" value="${param.y}"/>
<c:if test="${x>y}">
 <font color="blue"><h2>The Ans is:</h2></font>
 <c:out value="${x} is greater than ${y}"/>
</c:if> 
ForeachDemo.jsp
<%@taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<c:forEach begin="1" end="10" var="i">
 The Square of <c:out value=" ${i}=${i*i}"/><br>
 </c:forEach>
outDemo.jsp
<%@taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<c:set var="name" value="John"/>
My name is: <c:out value= "${name}" />
URLDemo.jsp
<%@taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<c:url value="/index.html"/>
choose_when_otherwise.jsp
<%@taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<c:set var="income" value="${4000*4}"/>
Your Income is: <c:out value="${income}"/>
<c:choose>
 <c:when test="${income <=1000}">
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
 Income is not good
 </c:when>
 <c:when test="${income > 10000}">
 Income is Very Good
 </c:when>
 <c:otherwise>
 Income is undetermined
 </c:otherwise>
</c:choose>
OUTPUT:
 
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
 
 
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
PRACTICAL 6
Q.6 a) Create a Currency Converter application using EJB.
CODE:
Index.html
<html><head><title>Currency Converter</title></head>
 <body>
 <form action="CCServlet" >
 Enter Amount <input type="text" name="amt"><br>
 Select Conversion Type
<input type="radio" name="type" value="r2d" checked>Rupees to Dollar
 <input type="radio" name="type" value="d2r" >Dollar to Rupees<br>
 <input type="reset" ><input type="submit" value="CONVERT" >
 </form>
 </body>
</html>
Step 2 : Create a session bean named as CCBean in the package named mybeans. 
Select the option Stateless and click on Local Interface.
Here you will find two files created in the mybeans package named as CCBean.java 
and CCBeanLocal.java
CCBeanLocal.java
package mybeans;
import javax.ejb.Stateless;
@Stateless
public interface CCBeanLocal {
//default constructor
public double r2Dollar(double r);
public double d2Rupees(double d); }
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
CCBean.java
package mybeans;
import javax.ejb.Stateless;
@Stateless
public class CCBean implements CCBean1Local 
{
public double r2Dollar(double r)
{
 return r/65.65; 
}
public double d2Rupees(double d)
{
 return d*65.65; 
} 
}
Step 3: Create a Servlet file name CCServlet in the package mypack.
package mypack;
import java.io.*;
import javax.servlet.*;
import javax.servlet.http.*;
import javax.ejb.EJB;
import mybeans.CCBeanLocal;
public class CCServlet extends HttpServlet {
 @EJB CCBeanLocal obj;
public void doGet(HttpServletRequest request, HttpServletResponse response)throws 
ServletException, IOException 
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
{
response.setContentType("text/html;charset=UTF-8");
PrintWriter out = response.getWriter();
double amt = Double.parseDouble(request.getParameter("amt"));
if(request.getParameter("type").equals("r2d"))
{
out.println("<h1>"+amt+ " Rupees = "+obj.r2Dollar(amt)+" Dollars</h1>");
}
if(request.getParameter("type").equals("d2r"))
{
out.println("<h1>"+amt+ " Dollars = "+obj.d2Rupees(amt)+" Rupees</h1>");
}
}
}
OUTPUT:
 
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
 
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
Q.6 b) Develop a Simple Room Reservation System Application Using EJB.
CODE:
Index.html
<html>
 <head>
 <title>Room Reservation</title>
 </head>
 <body>
 <form method="post" action="RoomClient">
 <br> No of Rooms <input type=text name="t1">
 <br> <input type="submit" name="btn" value="CheckIN">
 <br> <input type="submit" name="btn" value="CheckOUT">
 </form>
 </body>
</html>
Step2: Create a session bean named as RoomBean in the package named ejb. Select 
the option Stateless and click on Local Interface.
Here you will find two files created in the ejb package named as RoomBean.java and 
RoomBeanLocal.java
RoomBeanLocal.java
package ejb;
import javax.ejb.Local;
@Local
public interface RoomBeanLocal {
 public int checkin(int no);
 public int checkout(int no); 
}
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
RoomBean.java
package ejb;
import javax.ejb.Stateless;
import java.sql.*;
@Stateless
public class RoomBean implements RoomBeanLocal {
public int checkin(int no) {
 try
 {
 Class.forName("com.mysql.jdbc.Driver");
 Connection 
con=DriverManager.getConnection("jdbc:mysql://localhost/roomdb","root","tiger");
 String sql1 = "select * from room";
 Statement st=con.createStatement();
 ResultSet rs=st.executeQuery(sql1);
 rs.next();
 int total=rs.getInt(1);
 int occ=rs.getInt(2);
 int free=total-occ;
 System.out.println(total);
 System.out.println(free);
 if (free>=no)
 {
 String sql2="update room set occ=?"; 
 PreparedStatement ps=con.prepareStatement(sql2);
 ps.setInt(1, occ+no); 
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
 int res=ps.executeUpdate();
 return res;
 }
 else return 0;
 }
 catch(Exception e)
 {
 return 0;
 }
 }
 public int checkout(int no) {
 try
 { Class.forName("com.mysql.jdbc.Driver");
 Connection 
con=DriverManager.getConnection("jdbc:mysql://localhost/roomdb","root","tiger");
 String sql1 = "select * from room";
 Statement st=con.createStatement();
 ResultSet rs=st.executeQuery(sql1);
 rs.next();
 int total=rs.getInt(1);
 int occ=rs.getInt(2);
 if (occ>=no)
 {
 String sql2="update room set occ=?"; 
 PreparedStatement ps=con.prepareStatement(sql2);
 ps.setInt(1, occ-no); 
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
 int res=ps.executeUpdate();
 return res;
 }
 else return 0;
 }
 catch(Exception e)
 {
 return 0;
 } 
 } 
}
Step 3: Create a Servlet file named as RoomClient. Do not click on web.xml 
(Deployment Descriptor)
package servlet;
import ejb.RoomBeanLocal;
import java.io.*;
import javax.ejb.EJB;
import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.annotation.*;
@WebServlet(name = "roomclient", urlPatterns = {"/roomclient"})
public class roomclient extends HttpServlet {
 @EJB RoomBeanLocal obj;
 protected void doPost(HttpServletRequest request, HttpServletResponse response)
 throws ServletException, IOException {
 response.setContentType("text/html");
 PrintWriter out = response.getWriter(); 
 try {
 int no=Integer.parseInt(request.getParameter("t1"));
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
 String b=request.getParameter("btn");
 int res=0; 
 if(b.equals("CheckIN"))
 {
 res=obj.checkin(no);
 if (res==1)
 out.println(no + " rooms check-in");
 }
 if(b.equals("CheckOUT"))
 {
 res=obj.checkout(no);
 if (res==1)
 out.println(no + " rooms check-out");
 } 
 if(res==0)
 out.println("Not possible to do Check IN / OUT");
 out.println("<br><br><a href=index.html> Back </a>");
 } 
 finally { 
 out.close();
 }
 } 
}
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
OUTPUT:
 
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
Q.6 c) Develop simple shopping cart application using EJB [Stateful Session Bean].
CODE:
Step 1 creating application
File -> new project-> java web->web application -> Prac6CShoppingCartApp -> select 
Use dedicated folder for storing libraries -> finish
Step 2: Creating a stateful session bean
Source package -> new -> other -> enterprise java beans -> session bean -> next -> new 
session bean -> ejb name: ->ShoppingCart -> package: -> ejb -> session type option -> 
Stateful -> finish.
ShoppingCart.java
package ejb;
import java.sql.*;
import java.util.*;
import javax.ejb.*;
@Stateful
public class ShoppingCart
{ List<String> contents;
 String customerName;
 private Connection conn = null;
 private ResultSet rs;
 private Statement stmt = null;
 private String query = null;
 public void initialize(String person) 
 { if (person != null) {
 customerName = person;
 try {
 Class.forName("com.mysql.jdbc.Driver").newInstance();
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
 conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/cartdb", "root", 
"tiger");
 } catch(ClassNotFoundException | IllegalAccessException | InstantiationException | 
SQLException e) {
 System.err.println("Sorry failed to connect to the Database." + e.getMessage());
 }
 }
 contents = new ArrayList<>();
 }
 public void addBook(String title) {
 try {
 stmt = conn.createStatement();
 query = "INSERT INTO cart VALUES('" + customerName + "','" + title + "')";
 stmt.executeUpdate(query);
 } catch(SQLException e) {
 System.err.println("Sorry failed to insert values from the database table. " + e.getMessage());
 }
 }
 public void removeBook(String title) {
 try {
 stmt = conn.createStatement();
 query = "DELETE FROM cart WHERE UserName='" + customerName + "' AND 
ItemName='" + title + "'";
 stmt.executeUpdate(query);
 } catch(SQLException e) {
 System.err.println("Sorry failed to delete values from the database table. " + e.getMessage());
 }
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
 }
 public List<String> getContents() {
 try {
 stmt = conn.createStatement();
 query = "SELECT * FROM cart WHERE UserName='" + customerName + "'";
 rs = stmt.executeQuery(query);
 while(rs.next()) {
 contents.add(rs.getString("ItemName"));
 }
 } catch(SQLException e) {
 System.err.println("Sorry failed to select values from the database table. " + e.getMessage());
 }
 return contents;
 }
 @Remove()
 public void remove() {
 contents = null;
 }
}
Step 3: creating a web client using index.jsp
Right click on wewb pages -> new -> JSP -> filename -> index -> finish.
<%@page import="java.util.Iterator, java.util.List, javax.naming.InitialContext, 
ejb.ShoppingCart"%>
<%@page contentType="text/html" pageEncoding="UTF-8"%>
<!DOCTYPE html>
<%!
 private static ShoppingCart cart;
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
 public void jspInit() {
 try {
 InitialContext ic = new InitialContext();
 cart = (ShoppingCart) ic.lookup("java:global/Prac6CShoppingCartApp/ShoppingCart");
 } catch (Exception ex) {
 System.out.println("Could not create cart bean." + ex.getMessage());
 }
 }
%>
<%
 if(request.getParameter("txtCustomerName") != null) {
 cart.initialize(request.getParameter("txtCustomerName"));
 } else {
 cart.initialize("Guest");
 }
 if (request.getParameter("btnRmvBook") != null) {
 String books[] = request.getParameterValues("chkBook");
 if (books != null) {
 for (int i=0; i<books.length; i++) {
 cart.removeBook(books[i]);
 }
 }
 }
 if (request.getParameter("btnAddBook") != null) {
 String books[] = request.getParameterValues("chkBook");
 if (books != null) {
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
 for (int i=0; i<books.length; i++) {
 cart.addBook(books[i]);
 }
 }
 }
%>
<html>
 <head>
 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
 <title>Shopping Cart</title>
 </head>
 <body style="background-color: pink;">
 <h1 style="text-align: center;">Books For Sale</h1><br>
 <form method="post">
 Customer Name: <input type="text" name="txtCustomerName" value=<%= 
request.getParameter("txtCustomerName")%> /><br>
 <b>Book Titles</b><br>
 <input type="checkbox" name="chkBook" value="Struts 2.0 For Beginners">Struts 
2.0 For Beginners<br>
 <input type="checkbox" name="chkBook" value="Oracle 11g For 
Professionals">Oracle 11g For Professionals<br>
 <input type="checkbox" name="chkBook" value="Hibernate 3 For 
Beginners">Hibernate 3 For Beginners<br>
 <input type="checkbox" name="chkBook" value="Java Persistence API In EJB 3 
For Beginners">Java Persistence API In EJB 3 For Beginners<br>
 <br>
 <input type='submit' value='Add To My Basket' name='btnAddBook'>
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
 <input type='submit' value='Remove From My Basket' 
name='btnRmvBook'><br><br><br>
 <%
 if(cart!=null)
 {
 out.print("<b>Basket</b><br>");
 List<String> bookList = cart.getContents();
 Iterator iterator = bookList.iterator();
 while (iterator.hasNext()) 
 {
 String title = (String) iterator.next();
 %>
 <%= title %><br>
 <%
 }
 }
 %> 
 </form>
 </body>
</html>
Step 4:
Create database and database table
Services -> create database -> cartdb ->select cartdb - > right click -> create table -> 
cart -> UserName varchar 35
ItemName varchar 50
Finish.
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
Step 5.
Add mysql connector to the library under project tab.
Step 6: build and run the application.
OUTPUT:
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
PRACTICAL 7
Q.7 a) Develop simple EJB application to demonstrate Servlet Hit count using Singleton 
Session Beans.
CODE:
Java Web-> web application -> Pract7AServletHitsSingltonApp -> finish.
Step 1: Index.html
<html>
 <head>
 <title>TODO supply a title</title>
 <meta charset="UTF-8">
 <meta name="viewport" content="width=device-width, initial-scale=1.0">
 <meta http-equiv="Refresh" content="0; URL=ServletClient">
 </head>
 <body>
 <div>TODO write content</div>
 </body>
</html>
Step2: Create a Session Bean named as CountServletHitsBean Select Singleton 
package name as ejb (do not select Local or Remote)
package ejb;
import javax.ejb.Singleton;
@Singleton
public class CountServletHitsBean {
 private int hitCount;
 public synchronized int getCount()
 {
 return hitCount++;
 }
}
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
Step 3: Create a Servlet File name ServletClient in the package name as servlet.
Do not select the Deployment Discriptor file.
package servlet;
import ejb.CountServletHitsBean;
import java.io.*;
import javax.ejb.EJB;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.*;
@WebServlet(name = "ServletClient", urlPatterns = {"/ServletClient"})
public class ServletClient extends HttpServlet {
@EJB CountServletHitsBean obj;
@Override
protected void service (HttpServletRequest req, HttpServletResponse res) throws ServletException, 
IOException
{
 res.setContentType("text/html");
 PrintWriter out=res.getWriter();
 out.print("<b>Number of times this Servlet is accessed </b>: "+obj.getCount());
}
}
OUTPUT:
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
Q.7 b) Develop simple visitor Statistics application using Message Driven Bean 
[Stateless Session Bean].
CODE:
Web-> web application -> Pract7BVisitorStatisticsMDBApp -> select dedicated folders 
for storing libraries -> finish.
Step 1:
index.jsp
<%@page import="javax.jms.JMSException"%>
<%@page import="javax.naming.InitialContext"%>
<%@page import="javax.jms.Connection"%>
<%@page import="javax.jms.TextMessage"%>
<%@page import="javax.jms.MessageProducer"%>
<%@page import="javax.jms.Session"%>
<%@page import="javax.jms.Queue"%>
<%@page import="javax.jms.ConnectionFactory"%>
<%@page contentType="text/html" pageEncoding="UTF-8"%>
<!DOCTYPE html>
<%! 
private static ConnectionFactory connectionFactory;
private static Queue queue;
Connection connection=null;
Session mySession=null;
MessageProducer messageProducer=null;
TextMessage message=null;
%>
<html>
 <head>
 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
 <title>JSP Page</title>
 </head>
 <body>
 Welcome to My Home Page
 <% 
 try{
 InitialContext ic= new InitialContext();
 queue= (Queue)ic.lookup("jms/Queue");
 connectionFactory=(ConnectionFactory)ic.lookup("jms/QueueFactory");
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
 connection= connectionFactory.createConnection();
 mySession=connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
 messageProducer=mySession.createProducer(queue);
 message=mySession.createTextMessage();
 message.setText(request.getRemoteAddr());
 messageProducer.send(message);
 }
 catch(JMSException e)
 {
 System.out.println("Exception Occoured "+e.toString());
 } 
 %> 
 </body>
</html>
Step2: Create a Database name visitorstat  Create table name  userstat  column 
names 
Firstvisitdt – timestamp
Hostname – varchar 30 Primary Key
Visits – int 
Step3: Create a Session Bean named as VisitorStatBean  Select Stateless  package 
name as ejb, do not select Local / Remote
package ejb;
import java.sql.*;
import javax.annotation.PostConstruct;
import javax.annotation.PreDestroy;
import javax.ejb.Stateless;
@Stateless
public class VisitorStatBean {
private Connection conn=null;
private ResultSet rs;
private Statement st=null;
private String query =null;
@PostConstruct
public void connect()
{
 try {
 Class.forName("com.mysql.jdbc.Driver").newInstance();
 conn=DriverManager.getConnection("jdbc:mysql://localhost/visitorstat", "root", "tiger"); 
 } 
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
 catch (Exception e) {
 System.err.println(e.getMessage()); 
 }
}
@PreDestroy
public void disconnect()
{
 try {
 conn.close(); 
 } catch (Exception e) {
 System.err.println(e.getMessage()); 
 }
}
public void addVisitor(String host)
{
 try {
 st= conn.createStatement();
query="insert into userstat (hostname,visits) values ('"+host+"','1')";
st.executeUpdate(query);
 } 
 catch (SQLException e) 
 {
 try {
 st=conn.createStatement();
query="update userstat set visits=visits+1 where hostname='"+host+"' ";
st.executeUpdate(query);
 
 }
 catch (SQLException ex) {
 System.err.println("Cannot Update"+e.getMessage());
 }
 }
}
}
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
Step 4: Right click on Source Packages  Select New Other Enterprise Java Bean 
 MessageDrivenBean  EJB Name: BasicMessageBean Package: ejb Select 
Project Destination  Click on Add Button  Destination Name: jms/Queue 
Destination Type select the option Queue click on OK Click on Next  Activation 
Configuration Properties should be as it is.  Click on Finish
package ejb;
import javax.annotation.Resource;
import javax.ejb.ActivationConfigProperty;
import javax.ejb.EJB;
import javax.ejb.MessageDriven;
import javax.ejb.MessageDrivenContext;
import javax.jms.JMSException;
import javax.jms.Message;
import javax.jms.MessageListener;
import javax.jms.TextMessage;
@MessageDriven(activationConfig = {
 @ActivationConfigProperty(propertyName = "destinationLookup", propertyValue = "jms/Queue"),
 @ActivationConfigProperty(propertyName = "destinationType", propertyValue = 
"javax.jms.Queue")
})
public class BasicMessageBean implements MessageListener {
@EJB VisitorStatBean vs;
@Resource
private MessageDrivenContext mdc;
 public BasicMessageBean() {
 }
 
 @Override
 public void onMessage(Message message) {
 try {
 if(message instanceof TextMessage){
 TextMessage msg= (TextMessage) message; 
 vs.addVisitor(msg.getText()); 
 }
 } 
 catch (JMSException e) {
 mdc.setRollbackOnly();
 }
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
 }
 
}
Step 5: 
Before deploying and running the application, Glassfish Server setting is required. 
Browse the path:
Localhost:4848 on any browser.
Find Resources -> connectors -> Connector Resources double click on Connector 
Resources -> click on ‘New’ Button -> write JNDI name as -> jms/QueryFactory.
Find Admin Object Resources and double click on that -> click on ‘New’ Button -> 
write JNDI name as -> jms/Queue. 
Now run index.jsp file.
OUTPUT:
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
Q.7 c) Develop simple Marks Entry Application to demonstrate accessing Database 
using EJB.
CODE:
Step 1:
Create web application as pract7CMarksApp.
Step 2:
Create database marksdb
Step 3:
Create tables marks in marksdb database as:
create table marks (id int primary key auto_increment, sname varchar(35), marks1 int, 
marks2 int, marks3 int);
step 4:
index.jsp
<%@page import="ejb.MarksEntryBean"%>
<%@page import="javax.naming.InitialContext"%>
<%@page contentType="text/html" pageEncoding="UTF-8"%>
<!DOCTYPE html>
<%!
private static MarksEntryBean obj;
public void jspInit()
{
 try
 {
 InitialContext ic=new InitialContext();
 obj=(MarksEntryBean)ic.lookup("java:global/Pract7CMarksApp/MarksEntryBean");
 }
 catch(Exception e)
 {
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
 System.out.println(e);
 }
}
%>
<%
 if(request.getParameter("InsertMarks")!=null)
 {
 String sname;
 int marks1, marks2, marks3;
 sname = request.getParameter("sname");
 marks1=Integer.parseInt(request.getParameter("m1"));
 marks2=Integer.parseInt(request.getParameter("m2"));
 marks3=Integer.parseInt(request.getParameter("m3"));
 obj.addMarks(sname,marks1,marks2,marks3);
 out.print("Marks entered successfully..!!!!");
 } 
%>
<html>
 <head>
 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
 <title>JSP Page</title>
 </head>
 <body>
 <h2>Enter Details</h2>
 <form name="result" method="post">
 Enter student's name: <input type='text' name="sname" /><br>
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
 Enter subject 1 marks: <input type='text' name="m1" /><br>
 Enter subject 2 marks: <input type='text' name="m2" /><br>
 Enter subject 3 marks: <input type='text' name="m3" /><br>
 <input type='submit' name="InsertMarks" /><br>
 </form>
 </body>
</html>
Step 4:
create stateful java bean as select source package -> session bean -> class name -> 
MarksEntryBean -> package -> ejb -> bean type-> stateful -> don’t select Local / 
Remote -> finish.
package ejb;
import java.sql.*;
import javax.ejb.Stateful;
@Stateful
public class MarksEntryBean {
String sname;
int m1,m2,m3;
Connection con=null;
Statement st=null;
String query="";
public void addMarks(String sname,int m1,int m2,int m3)
{
 try
 {
 Class.forName("com.mysql.jdbc.Driver");
 con=DriverManager.getConnection("jdbc:mysql://localhost:3306/marksdb", "root","tiger");
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
 st=con.createStatement();
 query="insert into marks (sname,marks1,marks2,marks3) values 
('"+sname+"','"+m1+"','"+m2+"','"+m3+"')";
 st.executeUpdate(query);
 System.out.print("Marks entered sucessfully!!"); 
 }
 catch(Exception e){System.out.println(e);}
}
}
OUTPUT:
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
PRACTICAL 9
Q.9 a) Develop a JPA Application to demonstrate use of ORM associations.
CODE:
index.html
<html>
 <head>
 <title>TODO supply a title</title>
 <meta charset="UTF-8">
 <meta name="viewport" content="width=device-width, initial-scale=1.0">
 </head>
 <body>
 User Details <hr><br><br>
<form action="userview.jsp" >
 Name <input type="text" name="uname" maxlength="20"><br>
 User Type <input type="text" name="utype" maxlength="20">
<br><input type="submit" value="submit">
</form>
 </body>
</html>
userview.jsp
<%@page import="java.util.List"%>
<%@page import="java.util.Iterator"%>
<%@page import="hibernate.User"%>
<%!
 SessionFactory sf;
 org.hibernate.Session ss;
 List<hibernate.User> User; 
%>
<%
sf = new Configuration().configure().buildSessionFactory();
ss= sf.openSession(); 
Transaction tx=null; 
User ur=new User(); 
try
{ 
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
tx=ss.beginTransaction(); 
String uname=request.getParameter("uname"); 
String utype=request.getParameter("utype");
ur.setUname(uname);
 
ur.setUtype(utype); 
ss.save(ur); 
tx.commit(); 
 
}
 
catch(Exception e){ out.println("Error"+e.getMessage()); 
} 
 
try
 
{ 
ss.beginTransaction();
 
User=ss.createQuery("from User").list(); 
}
 
catch(Exception e){ } 
%>
<html>
<head>
<title>Guest View</title>
</head>
<body> 
Guest View 
Click here to go <a href="index.html"> BACK </a>
<br><br>
<%
Iterator it=User.iterator();
 
while(it.hasNext())
 
{
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
 
User eachrecord=(User)it.next(); 
 out.print(eachrecord.getUid()+" "); 
 out.print(eachrecord.getUname()+"<br>"); 
 out.print(eachrecord.getUtype()+"<br><hr>"); 
 }
 %>
</body>
</html>
hibernate.revenge.xml
<hibernate-reverse-engineering>
<schema-selection match-catalog="userdb"/>
<table-filter match-name="user"/>
</hibernate-reverse-engineering>
hibernate.cfg.xml
<hibernate-configuration>
<session-factory>
<property name="hibernate.dialect">org.hibernate.dialect.MySQLDialect</property>
<property name="hibernate.dialect">org.hibernate.dialect.MySQLDialect</property>
<property 
name="hibernate.connection.url">jdbc:mysql://localhost:3306/userdb?zeroDateTimeBehavior=conve
rtToNull</property>
<property name="hibernate.connection.username">root</property>
<property name="hibernate.connection.password">tiger</property>
</session-factory>
</hibernate-configuration>
User.hbm.xml
<hibernate-mapping>
<class optimistic-lock="version" catalog="userdb" table="user" name="hibernate.User">
<id name="uid" type="java.lang.Integer">
<column name="uid"/>
<generator class="identity"/>
</id>
<property name="uname" type="string">
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
<column name="uname" length="20"/>
</property>
<property name="utype" type="string">
<column name="utype" length="100"/>
</property>
</class>
</hibernate-mapping>
User.java
package hibernate;
public class User implements java.io.Serializable { 
private Integer uid; 
private String uname; 
private String utype; 
public User() { } 
public User(String uname, String utype) { 
this.uname = uname; 
this.utype = utype; 
} 
public Integer getUid() {
 
 return this.uid;
 
}
public void setUid(Integer uid) {
 
this.uid = uid;
 
} 
public String getUname() 
{
return this.uname; 
}
public void setUname(String uname) 
{ 
this.uname = uname;
}
public String getUtype()
{
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
 return this.utype;
 }
public void setUtype(String utype) 
{
this.utype = utype;
}
}
OUTPUT:
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
Q.9 b) Develop a Hibernate application to store Feedback of Website Visitor in MySQL 
Database.
Hibernate – Feedback of Website Visitor (on index paper)
Step 1: MySql Command:-
Select Services -> right click on database -> connect -> password -> ok ->again right 
click on database -> create database -> db -> ok.
Expand db -> Select and right click table -> click on Execute command -> 
Create table guestbook (no int primary key auto_increment, name varchar(20), msg 
varchar(100), dt varchar(40));
Step 2: Create a Hibernate Project :-
File -> New Project -> Java Web -> Web application - > Next -> give the project 
name -> browse the location as required -> select the checkbox – “dedicated folder 
for storing libraries” -> Next 
Select glassfish server -> next 
Select frame work - hibernate -> select the respective database connection -> finish. 
Step 3: Adding Reverse Engineering File :-
Right click on Project -> new -> other -> select Hibernate -> Hibernate Reverse 
Engineering wizard file type -> next -> file name (hibernate.reveng) , folder -> click 
on browse and select src->java -> next -> select guestbook table name from the 
available tables option -> click add ( select the checkbox – include related files) -> 
finish.
Step 4: Adding Hibernate mapping files and POJOs from Database file type:-
Right click on Project -> new -> other -> select Hibernate -> Hibernate mapping files 
and POJOs from Database file type) -> next -> keep the default configuration file 
name file name (hibernate.cfg) and Hibernate Reverse Engineering File 
(hibernate.reveng) -> type the package name (hibernate) -> finish.
Step 5: Creating JSP File :-
Right click on project -> new -> JSP -> filename -> guestbookview -> select 
radiobutton -> JSP file (Standard syntax) -> Finish.
 
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
CODE:
File name - Guestbook.java
package hibernate;
public class Guestbook implements java.io.Serializable {
 private Integer no;
 private String name;
 private String msg;
 private String dt;
 public Guestbook() {
 }
 public Guestbook(String name, String msg, String dt) {
 this.name = name;
 this.msg = msg;
 this.dt = dt;
 }
 public Integer getNo() {
 return this.no;
 }
 public void setNo(Integer no) {
 this.no = no;
 }
 public String getName() {
 return this.name;
 }
 public void setName(String name) {
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
 this.name = name;
 }
 public String getMsg() {
 return this.msg;
 }
 public void setMsg(String msg) {
 this.msg = msg;
 }
 public String getDt() {
 return this.dt;
 }
 public void setDt(String dt) {
 this.dt = dt;
 }
}
File name - hibernate.cfg.xml
<hibernate-configuration>
<session-factory>
<property name="hibernate.dialect">org.hibernate.dialect.MySQLDialect</property>
<property name="hibernate.connection.driver_class">com.mysql.jdbc.Driver</property>
<property name="hibernate.connection.url">jdbc:mysql://localhost:3306/db</property>
<property name="hibernate.connection.username">root</property>
<property name="hibernate.connection.password">tiger</property>
<mapping resource="hibernate/Guestbook.hbm.xml"/>
</session-factory>
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
</hibernate-configuration>
File name - Guestbook.hbm.xml
<hibernate-mapping>
<class name="hibernate.Guestbook" table="guestbook" catalog="db">
<id name="no" type="java.lang.Integer">
<column name="no" />
<generator class="identity" />
</id>
<property name="name" type="string">
<column name="name" length="20" />
</property>
<property name="msg" type="string">
<column name="msg" length="100" />
</property>
<property name="dt" type="string">
<column name="dt" length="40" />
</property>
</class>
</hibernate-mapping>
File name - index.jsp
<html>
<head>
<title>Guest Book</title>
</head>
<body>
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
Guest Book <hr><br><br>
<form action="guestbookview.jsp" >
 Name <input type="text" name="name" maxlength="20"><br>
 Message <textarea rows="5" cols="40" maxlength="100" name="msg"></textarea>
<br><input type="submit" value="submit">
</form>
</body>
</html>
File name - guestbookview.jsp
<%@page import="org.hibernate.SessionFactory"%>
<%@page import="org.hibernate.Session"%>
<%@page import="org.hibernate.cfg.Configuration"%>
<%@page import="org.hibernate.Transaction"%>
<%@page import="java.util.List"%>
<%@page import="java.util.Iterator"%>
<%@page import="hibernate.Guestbook"%>
<%!
 SessionFactory sf;
 org.hibernate.Session ss;
 List<hibernate.Guestbook> gbook; 
%>
<%
 sf = new Configuration().configure().buildSessionFactory();
 ss= sf.openSession();
 Transaction tx=null;
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
 Guestbook gb=new Guestbook();
 try
 {
 tx=ss.beginTransaction();
 String name=request.getParameter("name");
 String msg=request.getParameter("msg");
 String dt=new java.util.Date().toString();
 gb.setName(name);
 gb.setMsg(msg);
 gb.setDt(dt);
 ss.save(gb);
 tx.commit(); 
 }
 catch(Exception e){ out.println("Error"+e.getMessage()); } 
 try
 { ss.beginTransaction();
 gbook=ss.createQuery("from Guestbook").list(); 
 } 
 catch(Exception e){ } 
%>
<html>
<head>
<title>Guest View</title>
</head>
<body>
 Guest View 
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
 Click here to go <a href="index.jsp"> BACK </a>
<br><br>
<% Iterator it=gbook.iterator();
 while(it.hasNext())
 {
 Guestbook eachrecord=(Guestbook)it.next();
 out.print(eachrecord.getDt()+" ");
 out.print(eachrecord.getName()+"<br>");
 out.print(eachrecord.getMsg()+"<br><hr>");
 }
 %>
</body>
</html>
OUTPUT:
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
Q.9 c) Develop a Hibernate application to store and retrieve employee details in MySQL 
Database. 
CODE:
index.html
<html>
<head>
<title>Employee Details</title>
</head>
<body>
Employee Details <hr><br><br>
<form action="empview.jsp" >
 Name <input type="text" name="name" maxlength="20"><br>
 Salary <input type="text" name="salary" maxlength="20"><br>
 Designation <input type="text" name="designation" maxlength="20">
<br><input type="submit" value="submit">
</form>
</body>
</html>
empview.jsp
<%@page import="org.hibernate.SessionFactory"%>
<%@page import="org.hibernate.Session"%>
<%@page import="org.hibernate.cfg.Configuration"%>
<%@page import="org.hibernate.Transaction"%>
<%@page import="java.util.List"%>
<%@page import="java.util.Iterator"%>
<%@page import="hibernate.Emp"%>
<%!
SessionFactory sf; 
org.hibernate.Session ss; 
List<hibernate.Emp> Emplist; 
%>
<% 
sf = new Configuration().configure().buildSessionFactory(); 
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
ss= sf.openSession();
Transaction tx=null; 
Emp em=new Emp();
try
{ 
tx=ss.beginTransaction(); 
String Name=request.getParameter("name"); 
String Salary=request.getParameter("salary"); 
String Designation=request.getParameter("designation");
System.out.print("Name................."+Name+" "+Salary+" "+Designation); 
em.setName(Name);
 
em.setSalary(Salary); 
em.setDesignation(Designation);
System.out.print("set done........................"); 
ss.save(em);
System.out.print("save done...................");
tx.commit(); 
System.out.print("commit done............."); 
}
catch(Exception e){ out.println("Error"+e.getMessage()); } 
try
{ 
ss.beginTransaction();
Emplist=ss.createQuery("from Emp").list();
} 
catch(Exception e){ } 
%>
<html>
<head>
<title>Employee View</title>
</head>
<body>
Employee View 
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
 
Click here to go <a href="index.html"> BACK </a>
<br><br>
<% 
Iterator it=Emplist.iterator(); 
while(it.hasNext()) 
{
Emp eachrecord=(Emp)it.next();
out.print(eachrecord.getName()+"<br>");
out.print(eachrecord.getSalary()+"<br><hr>");
out.print(eachrecord.getDesignation()+"<br><hr>"); 
} 
%>
hibernate.revenge.xml
<hibernate-reverse-engineering>
<schema-selection match-catalog="employeedb"/>
<table-filter match-name="emp"/>
</hibernate-reverse-engineering>
hibernate1.cfg.xml
<hibernate-configuration>
<session-factory>
<property name="hibernate.dialect">org.hibernate.dialect.MySQLDialect</property>
<property name="hibernate.connection.driver_class">com.mysql.jdbc.Driver</property>
<property 
name="hibernate.connection.url">jdbc:mysql://localhost:3306/employeedb?zeroDateTimeBehavior=c
onvertToNull</property>
<property name="hibernate.connection.username">root</property>
<property name="hibernate.connection.password">tiger</property>
</session-factory>
</hibernate-configuration>
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
Emp.hbm.xml
<hibernate-mapping>
<class optimistic-lock="version" catalog="employeedb" table="emp" ame="hibernate.Emp">
<id name="id" type="java.lang.Integer">
<column name="id"/>
<generator class="identity"/>
</id>
<property name="name" type="string">
<column name="name" length="20"/>
</property>
<property name="salary" type="string">
<column name="salary" length="20"/>
</property>
<property name="designation" type="string">
<column name="designation" length="20"/>
</property>
</class>
</hibernate-mapping>
Emp.java
package hibernate;
public class Emp implements java.io.Serializable {
private Integer id; 
private String name; 
private String salary;
private String designation; 
public Emp() { }
public Emp(String name, String salary, String designation) { 
this.name = name; 
this.salary = salary; 
this.designation = designation; 
} 
public Integer getId() {
return this.id; 
}
public void setId(Integer id) {
this.id = id;
} 
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH
public String getName() { 
return this.name;
}
public void setName(String name) {
this.name = name; 
}
public String getSalary() {
return this.salary;
}
public void setSalary(String salary) {
this.salary = salary;
}
public String getDesignation() {
return this.designation;
}
public void setDesignation(String designation) {
this.designation = designation;
}
}
OUTPUT:
T.Y.B.Sc. IT SEM V ENTERPRISE JAVA LAB MANUAL
 PREPARED BY: MS. BEENA KAPADIA AND MS. PAYAL SHAH

